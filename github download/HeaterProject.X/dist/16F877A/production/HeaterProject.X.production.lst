

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jul 17 19:46:54 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0008                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0088                     	;# 
   230  0089                     	;# 
   231  008C                     	;# 
   232  008D                     	;# 
   233  008E                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0094                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  009F                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  010F                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0088                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370                           
   371                           	psect	idataBANK0
   372  05DD                     __pidataBANK0:
   373                           
   374                           ;initializer for _tempHist
   375  05DD  343C               	retlw	60
   376  05DE  343C               	retlw	60
   377  05DF  343C               	retlw	60
   378  05E0  343C               	retlw	60
   379  05E1  343C               	retlw	60
   380  05E2  343C               	retlw	60
   381  05E3  343C               	retlw	60
   382  05E4  343C               	retlw	60
   383  05E5  343C               	retlw	60
   384  05E6  343C               	retlw	60
   385                           
   386                           ;initializer for _tempSet
   387  05E7  343C               	retlw	60
   388                           
   389                           ;initializer for _maskLED
   390  05E8  34FF               	retlw	255
   391                           
   392                           ;initializer for _mask7S
   393  05E9  34FF               	retlw	255
   394  000E                     _TMR1	set	14
   395  0006                     _PORTBbits	set	6
   396  0010                     _T1CON	set	16
   397  0012                     _T2CON	set	18
   398  0011                     _TMR2	set	17
   399  0001                     _TMR0	set	1
   400  0006                     _PORTB	set	6
   401  0008                     _PORTD	set	8
   402  0005                     _PORTA	set	5
   403  0007                     _PORTCbits	set	7
   404  001E                     _ADRESH	set	30
   405  001F                     _ADCON0bits	set	31
   406  001F                     _ADCON0	set	31
   407  005D                     _TMR0IE	set	93
   408  005C                     _INTE	set	92
   409  005E                     _PEIE	set	94
   410  005F                     _GIE	set	95
   411  0080                     _TMR1ON	set	128
   412  0060                     _TMR1IF	set	96
   413  005A                     _TMR0IF	set	90
   414  0092                     _TMR2ON	set	146
   415  0061                     _TMR2IF	set	97
   416  0059                     _INTF	set	89
   417  0081                     _OPTION_REG	set	129
   418  0087                     _TRISC	set	135
   419  0088                     _TRISD	set	136
   420  0085                     _TRISA	set	133
   421  0086                     _TRISB	set	134
   422  0087                     _TRISCbits	set	135
   423  009E                     _ADRESL	set	158
   424  009F                     _ADCON1	set	159
   425  0460                     _TMR1IE	set	1120
   426  0461                     _TMR2IE	set	1121
   427                           
   428                           	psect	cinit
   429  0015                     start_initialization:	
   430                           ; #config settings
   431                           
   432  0015                     __initialization:
   433                           
   434                           ; Initialize objects allocated to BANK0
   435  0015  1383               	bcf	3,7	;select IRP bank0
   436  0016  3057               	movlw	low (__pdataBANK0+13)
   437  0017  00FD               	movwf	btemp+-1
   438  0018  3005               	movlw	high __pidataBANK0
   439  0019  00FE               	movwf	btemp
   440  001A  30DD               	movlw	low __pidataBANK0
   441  001B  00FF               	movwf	btemp+1
   442  001C  304A               	movlw	low __pdataBANK0
   443  001D  0084               	movwf	4
   444  001E  120A  118A  25AA  120A  118A  	fcall	init_ram0
   445                           
   446                           ; Clear objects allocated to BANK0
   447  0023  303A               	movlw	low __pbssBANK0
   448  0024  0084               	movwf	4
   449  0025  304A               	movlw	low (__pbssBANK0+16)
   450  0026  120A  118A  261C  120A  118A  	fcall	clear_ram0
   451  002B                     end_of_initialization:	
   452                           ;End of C runtime variable initialization code
   453                           
   454  002B                     __end_of__initialization:
   455  002B  0183               	clrf	3
   456  002C  120A  118A  29B3   	ljmp	_main	;jump to C main() function
   457                           
   458                           	psect	bssBANK0
   459  003A                     __pbssBANK0:
   460  003A                     _sum:
   461  003A                     	ds	2
   462  003C                     _notPressed:
   463  003C                     	ds	1
   464  003D                     _index:
   465  003D                     	ds	1
   466  003E                     _secondDigit:
   467  003E                     	ds	1
   468  003F                     _firstDigit:
   469  003F                     	ds	1
   470  0040                     _tempCurr:
   471  0040                     	ds	1
   472  0041                     _tempAvg:
   473  0041                     	ds	1
   474  0042                     _segFlag:
   475  0042                     	ds	1
   476  0043                     _i:
   477  0043                     	ds	1
   478  0044                     _delayLED:
   479  0044                     	ds	1
   480  0045                     _delay7S:
   481  0045                     	ds	1
   482  0046                     _coolMode:
   483  0046                     	ds	1
   484  0047                     _heatMode:
   485  0047                     	ds	1
   486  0048                     _powerMode:
   487  0048                     	ds	1
   488  0049                     _tempMode:
   489  0049                     	ds	1
   490                           
   491                           	psect	dataBANK0
   492  004A                     __pdataBANK0:
   493  004A                     _tempHist:
   494  004A                     	ds	10
   495  0054                     _tempSet:
   496  0054                     	ds	1
   497  0055                     _maskLED:
   498  0055                     	ds	1
   499  0056                     _mask7S:
   500  0056                     	ds	1
   501                           
   502                           	psect	inittext
   503  05A6                     init_fetch0:	
   504                           ;	Called with low address in FSR and high address in W
   505                           
   506  05A6  087E               	movf	btemp,w
   507  05A7  008A               	movwf	10
   508  05A8  087F               	movf	btemp+1,w
   509  05A9  0082               	movwf	2
   510  05AA                     init_ram0:	
   511                           ;Called with:
   512                           ;	high address of idata address in btemp 
   513                           ;	low address of idata address in btemp+1 
   514                           ;	low address of data in FSR
   515                           ;	high address + 1 of data in btemp-1
   516                           
   517  05AA  120A  118A  25A6  120A  118A  	fcall	init_fetch0
   518  05AF  0080               	movwf	0
   519  05B0  0A84               	incf	4,f
   520  05B1  0804               	movf	4,w
   521  05B2  067D               	xorwf	btemp+-1,w
   522  05B3  1903               	btfsc	3,2
   523  05B4  3400               	retlw	0
   524  05B5  0AFF               	incf	btemp+1,f
   525  05B6  1903               	btfsc	3,2
   526  05B7  0AFE               	incf	btemp,f
   527  05B8  2DAA               	goto	init_ram0
   528                           
   529                           	psect	clrtext
   530  061C                     clear_ram0:	
   531                           ;	Called with FSR containing the base address, and
   532                           ;	W with the last address+1
   533                           
   534  061C  0064               	clrwdt	;clear the watchdog before getting into this loop
   535  061D                     clrloop0:
   536  061D  0180               	clrf	0	;clear RAM location pointed to by FSR
   537  061E  0A84               	incf	4,f	;increment pointer
   538  061F  0604               	xorwf	4,w	;XOR with final address
   539  0620  1903               	btfsc	3,2	;have we reached the end yet?
   540  0621  3400               	retlw	0	;all done for this memory range, return
   541  0622  0604               	xorwf	4,w	;XOR again to restore value
   542  0623  2E1D               	goto	clrloop0	;do the next byte
   543                           
   544                           	psect	cstackCOMMON
   545  0070                     __pcstackCOMMON:
   546  0070                     ?_i2c_start:
   547  0070                     ??_i2c_start:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_i2c_wb:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_i2c_wb:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_i2c_rb:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_i2c_rb:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_i2c_stop:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_i2c_stop:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_adc_init:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_display7s:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_display7s:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_delay:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_delay:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_i2c_init:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_ISR:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_init:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_timer_100ms_init:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_timer_10ms_init:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_timer_1s_init:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_main:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_adc_amostra:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?___awdiv:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ?___awmod:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     display7s@v:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     ___awdiv@divisor:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ___awmod@divisor:	
   620                           ; 2 bytes @ 0x0
   621                           
   622                           
   623                           ; 2 bytes @ 0x0
   624  0070                     	ds	1
   625  0071                     i2c_rb@ack:
   626                           
   627                           ; 1 bytes @ 0x1
   628  0071                     	ds	1
   629  0072                     ??_adc_amostra:
   630  0072                     i2c_wb@val:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0072                     i2c_rb@ret:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0072                     ___awdiv@dividend:	
   637                           ; 1 bytes @ 0x2
   638                           
   639  0072                     ___awmod@dividend:	
   640                           ; 2 bytes @ 0x2
   641                           
   642                           
   643                           ; 2 bytes @ 0x2
   644  0072                     	ds	1
   645  0073                     i2c_wb@i:
   646  0073                     i2c_rb@i:	
   647                           ; 1 bytes @ 0x3
   648                           
   649                           
   650                           ; 1 bytes @ 0x3
   651  0073                     	ds	1
   652  0074                     ?_e2pext_r:
   653  0074                     ??___awdiv:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     ??___awmod:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     ___awdiv@counter:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ___awmod@counter:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     e2pext_r@addr:	
   666                           ; 1 bytes @ 0x4
   667                           
   668                           
   669                           ; 2 bytes @ 0x4
   670  0074                     	ds	1
   671  0075                     ___awdiv@sign:
   672  0075                     ___awmod@sign:	
   673                           ; 1 bytes @ 0x5
   674                           
   675                           
   676                           ; 1 bytes @ 0x5
   677  0075                     	ds	1
   678  0076                     ??_e2pext_r:
   679  0076                     e2pext_r@ret:	
   680                           ; 1 bytes @ 0x6
   681                           
   682  0076                     ___awdiv@quotient:	
   683                           ; 1 bytes @ 0x6
   684                           
   685                           
   686                           ; 2 bytes @ 0x6
   687  0076                     	ds	1
   688  0077                     e2pext_r@al:
   689                           
   690                           ; 1 bytes @ 0x7
   691  0077                     	ds	1
   692  0078                     e2pext_r@ah:
   693                           
   694                           ; 1 bytes @ 0x8
   695  0078                     	ds	1
   696  0079                     ?_e2pext_w:
   697  0079                     adc_amostra@canal:	
   698                           ; 1 bytes @ 0x9
   699                           
   700  0079                     e2pext_w@addr:	
   701                           ; 1 bytes @ 0x9
   702                           
   703                           
   704                           ; 2 bytes @ 0x9
   705  0079                     	ds	2
   706  007B                     e2pext_w@val:
   707                           
   708                           ; 1 bytes @ 0xB
   709  007B                     	ds	1
   710  007C                     ??_e2pext_w:
   711                           
   712                           ; 1 bytes @ 0xC
   713  007C                     	ds	2
   714                           
   715                           	psect	cstackBANK0
   716  0020                     __pcstackBANK0:
   717  0020                     e2pext_w@ah:
   718                           
   719                           ; 1 bytes @ 0x0
   720  0020                     	ds	1
   721  0021                     e2pext_w@al:
   722                           
   723                           ; 1 bytes @ 0x1
   724  0021                     	ds	1
   725  0022                     e2pext_w@nt:
   726                           
   727                           ; 1 bytes @ 0x2
   728  0022                     	ds	1
   729  0023                     e2pext_w@tmp:
   730                           
   731                           ; 2 bytes @ 0x3
   732  0023                     	ds	2
   733  0025                     ??_ISR:
   734                           
   735                           ; 1 bytes @ 0x5
   736  0025                     	ds	6
   737  002B                     _ISR$275:
   738                           
   739                           ; 2 bytes @ 0xB
   740  002B                     	ds	2
   741  002D                     _ISR$276:
   742                           
   743                           ; 2 bytes @ 0xD
   744  002D                     	ds	2
   745  002F                     ??_adc_init:
   746  002F                     ??_i2c_init:	
   747                           ; 1 bytes @ 0xF
   748                           
   749  002F                     ??_init:	
   750                           ; 1 bytes @ 0xF
   751                           
   752  002F                     ??_timer_100ms_init:	
   753                           ; 1 bytes @ 0xF
   754                           
   755  002F                     ??_timer_10ms_init:	
   756                           ; 1 bytes @ 0xF
   757                           
   758  002F                     ??_timer_1s_init:	
   759                           ; 1 bytes @ 0xF
   760                           
   761  002F                     ?___lwdiv:	
   762                           ; 1 bytes @ 0xF
   763                           
   764  002F                     ___lwdiv@divisor:	
   765                           ; 2 bytes @ 0xF
   766                           
   767                           
   768                           ; 2 bytes @ 0xF
   769  002F                     	ds	2
   770  0031                     ___lwdiv@dividend:
   771                           
   772                           ; 2 bytes @ 0x11
   773  0031                     	ds	2
   774  0033                     ??___lwdiv:
   775  0033                     ___lwdiv@quotient:	
   776                           ; 1 bytes @ 0x13
   777                           
   778                           
   779                           ; 2 bytes @ 0x13
   780  0033                     	ds	2
   781  0035                     ___lwdiv@counter:
   782                           
   783                           ; 1 bytes @ 0x15
   784  0035                     	ds	1
   785  0036                     ??_main:
   786                           
   787                           ; 1 bytes @ 0x16
   788  0036                     	ds	4
   789                           
   790                           	psect	maintext
   791  01B3                     __pmaintext:	
   792 ;;
   793 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   794 ;;
   795 ;; *************** function _main *****************
   796 ;; Defined at:
   797 ;;		line 200 in file "main.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : B00/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0
   813 ;;      Temps:          0       4       0       0       0
   814 ;;      Totals:         0       4       0       0       0
   815 ;;Total ram usage:        4 bytes
   816 ;; Hardware stack levels required when called:    6
   817 ;; This function calls:
   818 ;;		___lwdiv
   819 ;;		_adc_init
   820 ;;		_i2c_init
   821 ;;		_init
   822 ;;		_timer_100ms_init
   823 ;;		_timer_10ms_init
   824 ;;		_timer_1s_init
   825 ;; This function is called by:
   826 ;;		Startup code after reset
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _main
   832  01B3                     _main:
   833  01B3                     l1927:	
   834                           ;incstack = 0
   835                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   836                           
   837                           
   838                           ;main.c: 202: i2c_init();
   839  01B3  120A  118A  2624  120A  118A  	fcall	_i2c_init
   840  01B8                     l1929:
   841                           
   842                           ;main.c: 204: init();
   843  01B8  120A  118A  2591  120A  118A  	fcall	_init
   844  01BD                     l1931:
   845                           
   846                           ;main.c: 206: timer_100ms_init();
   847  01BD  120A  118A  2600  120A  118A  	fcall	_timer_100ms_init
   848  01C2                     l1933:
   849                           
   850                           ;main.c: 207: timer_10ms_init();
   851  01C2  120A  118A  25F6  120A  118A  	fcall	_timer_10ms_init
   852  01C7                     l1935:
   853                           
   854                           ;main.c: 208: timer_1s_init();
   855  01C7  120A  118A  25EA  120A  118A  	fcall	_timer_1s_init
   856  01CC                     l1937:
   857                           
   858                           ;main.c: 209: adc_init();
   859  01CC  120A  118A  260A  120A  118A  	fcall	_adc_init
   860  01D1                     l1939:
   861                           
   862                           ;main.c: 216: if (powerMode) {
   863  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   864  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   865  01D3  0848               	movf	_powerMode,w
   866  01D4  1903               	btfsc	3,2
   867  01D5  29D7               	goto	u1431
   868  01D6  29D8               	goto	u1430
   869  01D7                     u1431:
   870  01D7  2AA6               	goto	l255
   871  01D8                     u1430:
   872  01D8                     l1941:
   873                           
   874                           ;main.c: 232: if (!(PORTB & (1<<1))) {
   875  01D8  1886               	btfsc	6,1	;volatile
   876  01D9  29DB               	goto	u1441
   877  01DA  29DC               	goto	u1440
   878  01DB                     u1441:
   879  01DB  29F5               	goto	l1957
   880  01DC                     u1440:
   881  01DC                     l1943:
   882                           
   883                           ;main.c: 233: notPressed = 0;
   884  01DC  01BC               	clrf	_notPressed
   885  01DD                     l257:	
   886                           ;main.c: 234: while (!(PORTB & (1<<1)));
   887                           
   888  01DD  1C86               	btfss	6,1	;volatile
   889  01DE  29E0               	goto	u1451
   890  01DF  29E1               	goto	u1450
   891  01E0                     u1451:
   892  01E0  29DD               	goto	l257
   893  01E1                     u1450:
   894  01E1                     l1945:
   895                           
   896                           ;main.c: 235: if (!tempMode) {
   897  01E1  0849               	movf	_tempMode,w
   898  01E2  1D03               	btfss	3,2
   899  01E3  29E5               	goto	u1461
   900  01E4  29E6               	goto	u1460
   901  01E5                     u1461:
   902  01E5  29E9               	goto	l1949
   903  01E6                     u1460:
   904  01E6                     l1947:
   905                           
   906                           ;main.c: 236: tempMode = 1;
   907  01E6  01C9               	clrf	_tempMode
   908  01E7  0AC9               	incf	_tempMode,f
   909                           
   910                           ;main.c: 237: } else {
   911  01E8  29F5               	goto	l1957
   912  01E9                     l1949:
   913                           
   914                           ;main.c: 238: if (tempSet < 75) {
   915  01E9  304B               	movlw	75
   916  01EA  0254               	subwf	_tempSet,w
   917  01EB  1803               	skipnc
   918  01EC  29EE               	goto	u1471
   919  01ED  29EF               	goto	u1470
   920  01EE                     u1471:
   921  01EE  29F5               	goto	l1957
   922  01EF                     u1470:
   923  01EF                     l1951:
   924                           
   925                           ;main.c: 239: GIE = 0;
   926  01EF  138B               	bcf	11,7	;volatile
   927  01F0                     l1953:
   928                           
   929                           ;main.c: 240: tempSet += 5;
   930  01F0  3005               	movlw	5
   931  01F1  00FF               	movwf	btemp+1
   932  01F2  087F               	movf	btemp+1,w
   933  01F3  07D4               	addwf	_tempSet,f
   934  01F4                     l1955:
   935                           
   936                           ;main.c: 241: GIE = 1;
   937  01F4  178B               	bsf	11,7	;volatile
   938  01F5                     l1957:
   939                           
   940                           ;main.c: 242: };main.c: 243: };main.c: 244: };main.c: 246: if (!(PORTB & (1<<2))) {
   941  01F5  1906               	btfsc	6,2	;volatile
   942  01F6  29F8               	goto	u1481
   943  01F7  29F9               	goto	u1480
   944  01F8                     u1481:
   945  01F8  2A10               	goto	l1973
   946  01F9                     u1480:
   947  01F9                     l1959:
   948                           
   949                           ;main.c: 247: notPressed = 0;
   950  01F9  01BC               	clrf	_notPressed
   951  01FA                     l264:	
   952                           ;main.c: 248: while (!(PORTB & (1<<2)));
   953                           
   954  01FA  1D06               	btfss	6,2	;volatile
   955  01FB  29FD               	goto	u1491
   956  01FC  29FE               	goto	u1490
   957  01FD                     u1491:
   958  01FD  29FA               	goto	l264
   959  01FE                     u1490:
   960  01FE                     l1961:
   961                           
   962                           ;main.c: 249: if (!tempMode) {
   963  01FE  0849               	movf	_tempMode,w
   964  01FF  1D03               	btfss	3,2
   965  0200  2A02               	goto	u1501
   966  0201  2A03               	goto	u1500
   967  0202                     u1501:
   968  0202  2A06               	goto	l1965
   969  0203                     u1500:
   970  0203                     l1963:
   971                           
   972                           ;main.c: 250: tempMode = 1;
   973  0203  01C9               	clrf	_tempMode
   974  0204  0AC9               	incf	_tempMode,f
   975                           
   976                           ;main.c: 251: } else {
   977  0205  2A10               	goto	l1973
   978  0206                     l1965:
   979                           
   980                           ;main.c: 252: if (tempSet > 35) {
   981  0206  3024               	movlw	36
   982  0207  0254               	subwf	_tempSet,w
   983  0208  1C03               	skipc
   984  0209  2A0B               	goto	u1511
   985  020A  2A0C               	goto	u1510
   986  020B                     u1511:
   987  020B  2A10               	goto	l1973
   988  020C                     u1510:
   989  020C                     l1967:
   990                           
   991                           ;main.c: 253: GIE = 0;
   992  020C  138B               	bcf	11,7	;volatile
   993  020D                     l1969:
   994                           
   995                           ;main.c: 254: tempSet -= 5;
   996  020D  3005               	movlw	5
   997  020E  02D4               	subwf	_tempSet,f
   998  020F                     l1971:
   999                           
  1000                           ;main.c: 255: GIE = 1;
  1001  020F  178B               	bsf	11,7	;volatile
  1002  0210                     l1973:
  1003                           
  1004                           ;main.c: 256: };main.c: 257: };main.c: 258: };main.c: 280: GIE = 0;
  1005  0210  138B               	bcf	11,7	;volatile
  1006  0211                     l1975:
  1007                           
  1008                           ;main.c: 281: for (i = 0; i < 9; i++) {
  1009  0211  01C3               	clrf	_i
  1010  0212                     l1981:
  1011                           
  1012                           ;main.c: 282: sum += tempHist[i];
  1013  0212  0843               	movf	_i,w
  1014  0213  3E4A               	addlw	(low (_tempHist| 0))& (0+255)
  1015  0214  0084               	movwf	4
  1016  0215  1383               	bcf	3,7	;select IRP bank0
  1017  0216  0800               	movf	0,w
  1018  0217  00B6               	movwf	??_main
  1019  0218  01B7               	clrf	??_main+1
  1020  0219  0836               	movf	??_main,w
  1021  021A  07BA               	addwf	_sum,f
  1022  021B  1803               	skipnc
  1023  021C  0ABB               	incf	_sum+1,f
  1024  021D  0837               	movf	??_main+1,w
  1025  021E  07BB               	addwf	_sum+1,f
  1026  021F                     l1983:
  1027  021F  3001               	movlw	1
  1028  0220  00FF               	movwf	btemp+1
  1029  0221  087F               	movf	btemp+1,w
  1030  0222  07C3               	addwf	_i,f
  1031  0223                     l1985:
  1032  0223  3009               	movlw	9
  1033  0224  0243               	subwf	_i,w
  1034  0225  1C03               	skipc
  1035  0226  2A28               	goto	u1521
  1036  0227  2A29               	goto	u1520
  1037  0228                     u1521:
  1038  0228  2A12               	goto	l1981
  1039  0229                     u1520:
  1040  0229                     l1987:
  1041                           
  1042                           ;main.c: 283: };main.c: 284: tempAvg = sum / 10;
  1043  0229  300A               	movlw	10
  1044  022A  00AF               	movwf	___lwdiv@divisor
  1045  022B  3000               	movlw	0
  1046  022C  00B0               	movwf	___lwdiv@divisor+1
  1047  022D  083B               	movf	_sum+1,w
  1048  022E  00B2               	movwf	___lwdiv@dividend+1
  1049  022F  083A               	movf	_sum,w
  1050  0230  00B1               	movwf	___lwdiv@dividend
  1051  0231  120A  118A  24C7  120A  118A  	fcall	___lwdiv
  1052  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0238  082F               	movf	?___lwdiv,w
  1055  0239  00FF               	movwf	btemp+1
  1056  023A  087F               	movf	btemp+1,w
  1057  023B  00C1               	movwf	_tempAvg
  1058  023C                     l1989:
  1059                           
  1060                           ;main.c: 285: GIE = 1;
  1061  023C  178B               	bsf	11,7	;volatile
  1062  023D                     l1991:
  1063                           
  1064                           ;main.c: 288: sum = 0;
  1065  023D  01BA               	clrf	_sum
  1066  023E  01BB               	clrf	_sum+1
  1067  023F                     l1993:
  1068                           
  1069                           ;main.c: 291: if (tempSet - tempAvg >= 5) {
  1070  023F  0854               	movf	_tempSet,w
  1071  0240  00B6               	movwf	??_main
  1072  0241  01B7               	clrf	??_main+1
  1073  0242  0837               	movf	??_main+1,w
  1074  0243  00B9               	movwf	??_main+3
  1075  0244  0841               	movf	_tempAvg,w
  1076  0245  0236               	subwf	??_main,w
  1077  0246  00B8               	movwf	??_main+2
  1078  0247  1C03               	skipc
  1079  0248  03B9               	decf	??_main+3,f
  1080  0249  0839               	movf	??_main+3,w
  1081  024A  3A80               	xorlw	128
  1082  024B  00FF               	movwf	btemp+1
  1083  024C  3080               	movlw	128
  1084  024D  027F               	subwf	btemp+1,w
  1085  024E  1D03               	skipz
  1086  024F  2A52               	goto	u1535
  1087  0250  3005               	movlw	5
  1088  0251  0238               	subwf	??_main+2,w
  1089  0252                     u1535:
  1090  0252  1C03               	skipc
  1091  0253  2A55               	goto	u1531
  1092  0254  2A56               	goto	u1530
  1093  0255                     u1531:
  1094  0255  2A5C               	goto	l1999
  1095  0256                     u1530:
  1096  0256                     l1995:
  1097                           
  1098                           ;main.c: 293: heatMode = 1;
  1099  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0258  01C7               	clrf	_heatMode
  1102  0259  0AC7               	incf	_heatMode,f
  1103  025A                     l1997:
  1104                           
  1105                           ;main.c: 294: coolMode = 0;
  1106  025A  01C6               	clrf	_coolMode
  1107                           
  1108                           ;main.c: 295: } else if (tempSet - tempAvg <= -5) {
  1109  025B  2A7A               	goto	l2005
  1110  025C                     l1999:
  1111  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1112  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1113  025E  0854               	movf	_tempSet,w
  1114  025F  00B6               	movwf	??_main
  1115  0260  01B7               	clrf	??_main+1
  1116  0261  0837               	movf	??_main+1,w
  1117  0262  00B9               	movwf	??_main+3
  1118  0263  0841               	movf	_tempAvg,w
  1119  0264  0236               	subwf	??_main,w
  1120  0265  00B8               	movwf	??_main+2
  1121  0266  1C03               	skipc
  1122  0267  03B9               	decf	??_main+3,f
  1123  0268  0839               	movf	??_main+3,w
  1124  0269  3A80               	xorlw	128
  1125  026A  00FF               	movwf	btemp+1
  1126  026B  307F               	movlw	127
  1127  026C  027F               	subwf	btemp+1,w
  1128  026D  1D03               	skipz
  1129  026E  2A71               	goto	u1545
  1130  026F  30FC               	movlw	252
  1131  0270  0238               	subwf	??_main+2,w
  1132  0271                     u1545:
  1133  0271  1803               	skipnc
  1134  0272  2A74               	goto	u1541
  1135  0273  2A75               	goto	u1540
  1136  0274                     u1541:
  1137  0274  2A7A               	goto	l2005
  1138  0275                     u1540:
  1139  0275                     l2001:
  1140                           
  1141                           ;main.c: 297: heatMode = 0;
  1142  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0277  01C7               	clrf	_heatMode
  1145  0278                     l2003:
  1146                           
  1147                           ;main.c: 298: coolMode = 1;
  1148  0278  01C6               	clrf	_coolMode
  1149  0279  0AC6               	incf	_coolMode,f
  1150  027A                     l2005:
  1151                           
  1152                           ;main.c: 299: };main.c: 302: if (heatMode || coolMode) {
  1153  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1154  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1155  027C  0847               	movf	_heatMode,w
  1156  027D  1D03               	btfss	3,2
  1157  027E  2A80               	goto	u1551
  1158  027F  2A81               	goto	u1550
  1159  0280                     u1551:
  1160  0280  2A86               	goto	l2009
  1161  0281                     u1550:
  1162  0281                     l2007:
  1163  0281  0846               	movf	_coolMode,w
  1164  0282  1903               	btfsc	3,2
  1165  0283  2A85               	goto	u1561
  1166  0284  2A86               	goto	u1560
  1167  0285                     u1561:
  1168  0285  2AA1               	goto	l2017
  1169  0286                     u1560:
  1170  0286                     l2009:
  1171                           
  1172                           ;main.c: 303: PORTBbits.RB4 = maskLED ? 1 : 0;
  1173  0286  0855               	movf	_maskLED,w
  1174  0287  1D03               	btfss	3,2
  1175  0288  2A8A               	goto	u1571
  1176  0289  2A8E               	goto	u1570
  1177  028A                     u1571:
  1178  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1179  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1180  028C  1606               	bsf	6,4	;volatile
  1181  028D  2A91               	goto	u1584
  1182  028E                     u1570:
  1183  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1184  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0290  1206               	bcf	6,4	;volatile
  1186  0291                     u1584:
  1187                           
  1188                           ;main.c: 304: if (heatMode) {
  1189  0291  0847               	movf	_heatMode,w
  1190  0292  1903               	btfsc	3,2
  1191  0293  2A95               	goto	u1591
  1192  0294  2A96               	goto	u1590
  1193  0295                     u1591:
  1194  0295  2A99               	goto	l2013
  1195  0296                     u1590:
  1196  0296                     l2011:
  1197                           
  1198                           ;main.c: 306: PORTCbits.RC5 = 1;
  1199  0296  1687               	bsf	7,5	;volatile
  1200                           
  1201                           ;main.c: 307: PORTCbits.RC2 = 0;
  1202  0297  1107               	bcf	7,2	;volatile
  1203                           
  1204                           ;main.c: 309: } else if (coolMode) {
  1205  0298  29D1               	goto	l1939
  1206  0299                     l2013:
  1207  0299  0846               	movf	_coolMode,w
  1208  029A  1903               	btfsc	3,2
  1209  029B  2A9D               	goto	u1601
  1210  029C  2A9E               	goto	u1600
  1211  029D                     u1601:
  1212  029D  2AAA               	goto	l282
  1213  029E                     u1600:
  1214  029E                     l2015:
  1215                           
  1216                           ;main.c: 311: PORTCbits.RC5 = 0;
  1217  029E  1287               	bcf	7,5	;volatile
  1218                           
  1219                           ;main.c: 312: PORTCbits.RC2 = 1;
  1220  029F  1507               	bsf	7,2	;volatile
  1221  02A0  29D1               	goto	l1939
  1222  02A1                     l2017:
  1223                           
  1224                           ;main.c: 317: PORTB &= ~(1<<4);
  1225  02A1  30EF               	movlw	239
  1226  02A2  00FF               	movwf	btemp+1
  1227  02A3  087F               	movf	btemp+1,w
  1228  02A4  0586               	andwf	6,f	;volatile
  1229  02A5  29D1               	goto	l1939
  1230  02A6                     l255:
  1231                           
  1232                           ;main.c: 323: PORTCbits.RC5 = 0;
  1233  02A6  1287               	bcf	7,5	;volatile
  1234                           
  1235                           ;main.c: 324: PORTCbits.RC2 = 0;
  1236  02A7  1107               	bcf	7,2	;volatile
  1237  02A8                     l2019:
  1238                           
  1239                           ;main.c: 325: PORTD = 0x00;
  1240  02A8  0188               	clrf	8	;volatile
  1241  02A9  29D1               	goto	l1939
  1242  02AA                     l282:
  1243  02AA  29D1               	goto	l1939
  1244  02AB  120A  118A  2812   	ljmp	start
  1245  02AE                     __end_of_main:
  1246                           
  1247                           	psect	text1
  1248  05EA                     __ptext1:	
  1249 ;; *************** function _timer_1s_init *****************
  1250 ;; Defined at:
  1251 ;;		line 194 in file "main.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1265 ;;      Params:         0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0
  1268 ;;      Totals:         0       0       0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    5
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function _timer_1s_init
  1281  05EA                     _timer_1s_init:
  1282  05EA                     l1693:	
  1283                           ;incstack = 0
  1284                           ; Regs used in _timer_1s_init: [wreg]
  1285                           
  1286                           
  1287                           ;main.c: 195: TMR1 = 3036;
  1288  05EA  300B               	movlw	11
  1289  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1290  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1291  05ED  008F               	movwf	15	;volatile
  1292  05EE  30DC               	movlw	220
  1293  05EF  008E               	movwf	14	;volatile
  1294  05F0                     l1695:
  1295                           
  1296                           ;main.c: 196: T1CON = (1 << 5) | (1 << 6) | (1 << 0);
  1297  05F0  3061               	movlw	97
  1298  05F1  0090               	movwf	16	;volatile
  1299  05F2                     l1697:
  1300                           
  1301                           ;main.c: 197: TMR1IE = 1;
  1302  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  1303  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  1304  05F4  140C               	bsf	12,0	;volatile
  1305  05F5                     l249:
  1306  05F5  0008               	return
  1307  05F6                     __end_of_timer_1s_init:
  1308                           
  1309                           	psect	text2
  1310  05F6                     __ptext2:	
  1311 ;; *************** function _timer_10ms_init *****************
  1312 ;; Defined at:
  1313 ;;		line 188 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    5
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _timer_10ms_init
  1343  05F6                     _timer_10ms_init:
  1344  05F6                     l1689:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _timer_10ms_init: [wreg]
  1347                           
  1348                           
  1349                           ;main.c: 189: TMR2 = 1;
  1350  05F6  3001               	movlw	1
  1351  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1352  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1353  05F9  0091               	movwf	17	;volatile
  1354                           
  1355                           ;main.c: 190: T2CON = 0x07;
  1356  05FA  3007               	movlw	7
  1357  05FB  0092               	movwf	18	;volatile
  1358  05FC                     l1691:
  1359                           
  1360                           ;main.c: 191: TMR2IE = 1;
  1361  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  1362  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  1363  05FE  148C               	bsf	12,1	;volatile
  1364  05FF                     l246:
  1365  05FF  0008               	return
  1366  0600                     __end_of_timer_10ms_init:
  1367                           
  1368                           	psect	text3
  1369  0600                     __ptext3:	
  1370 ;; *************** function _timer_100ms_init *****************
  1371 ;; Defined at:
  1372 ;;		line 182 in file "main.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    5
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _timer_100ms_init
  1402  0600                     _timer_100ms_init:
  1403  0600                     l1685:	
  1404                           ;incstack = 0
  1405                           ; Regs used in _timer_100ms_init: [wreg]
  1406                           
  1407                           
  1408                           ;main.c: 183: TMR0IE = 1;
  1409  0600  168B               	bsf	11,5	;volatile
  1410  0601                     l1687:
  1411                           
  1412                           ;main.c: 184: OPTION_REG = 0x07;
  1413  0601  3007               	movlw	7
  1414  0602  1683               	bsf	3,5	;RP0=1, select bank1
  1415  0603  1303               	bcf	3,6	;RP1=0, select bank1
  1416  0604  0081               	movwf	1	;volatile
  1417                           
  1418                           ;main.c: 185: TMR0 = 60;
  1419  0605  303C               	movlw	60
  1420  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0608  0081               	movwf	1	;volatile
  1423  0609                     l243:
  1424  0609  0008               	return
  1425  060A                     __end_of_timer_100ms_init:
  1426                           
  1427                           	psect	text4
  1428  0591                     __ptext4:	
  1429 ;; *************** function _init *****************
  1430 ;; Defined at:
  1431 ;;		line 163 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0, btemp+1
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    5
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _init
  1461  0591                     _init:
  1462  0591                     l1669:	
  1463                           ;incstack = 0
  1464                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
  1465                           
  1466                           
  1467                           ;main.c: 166: TRISB = (1<<0) | (1<<1) | (1<<2);
  1468  0591  3007               	movlw	7
  1469  0592  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0593  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0594  0086               	movwf	6	;volatile
  1472                           
  1473                           ;main.c: 167: TRISA = 0x07;
  1474  0595  3007               	movlw	7
  1475  0596  0085               	movwf	5	;volatile
  1476  0597                     l1671:
  1477                           
  1478                           ;main.c: 168: TRISD = 0x00;
  1479  0597  0188               	clrf	8	;volatile
  1480  0598                     l1673:
  1481                           
  1482                           ;main.c: 169: TRISC = 0x00;
  1483  0598  0187               	clrf	7	;volatile
  1484  0599                     l1675:
  1485                           
  1486                           ;main.c: 170: PORTB &= ~(1<<4);
  1487  0599  30EF               	movlw	239
  1488  059A  00FF               	movwf	btemp+1
  1489  059B  087F               	movf	btemp+1,w
  1490  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1491  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1492  059E  0586               	andwf	6,f	;volatile
  1493  059F                     l1677:
  1494                           
  1495                           ;main.c: 172: OPTION_REG = 0x00;
  1496  059F  1683               	bsf	3,5	;RP0=1, select bank1
  1497  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  1498  05A1  0181               	clrf	1	;volatile
  1499  05A2                     l1679:
  1500                           
  1501                           ;main.c: 174: GIE = 1;
  1502  05A2  178B               	bsf	11,7	;volatile
  1503  05A3                     l1681:
  1504                           
  1505                           ;main.c: 175: PEIE = 1;
  1506  05A3  170B               	bsf	11,6	;volatile
  1507  05A4                     l1683:
  1508                           
  1509                           ;main.c: 176: INTE = 1;
  1510  05A4  160B               	bsf	11,4	;volatile
  1511  05A5                     l240:
  1512  05A5  0008               	return
  1513  05A6                     __end_of_init:
  1514                           
  1515                           	psect	text5
  1516  0624                     __ptext5:	
  1517 ;; *************** function _i2c_init *****************
  1518 ;; Defined at:
  1519 ;;		line 44 in file "i2c.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		None
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0
  1536 ;;      Totals:         0       0       0       0       0
  1537 ;;Total ram usage:        0 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    5
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _i2c_init
  1549  0624                     _i2c_init:
  1550  0624                     l1667:	
  1551                           ;incstack = 0
  1552                           ; Regs used in _i2c_init: []
  1553                           
  1554                           
  1555                           ;i2c.c: 46: TRISCbits.TRISC4=0;
  1556  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1558  0626  1207               	bcf	7,4	;volatile
  1559                           
  1560                           ;i2c.c: 47: PORTCbits.RC3=1;
  1561  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0629  1587               	bsf	7,3	;volatile
  1564                           
  1565                           ;i2c.c: 48: PORTCbits.RC4=1;
  1566  062A  1607               	bsf	7,4	;volatile
  1567  062B                     l80:
  1568  062B  0008               	return
  1569  062C                     __end_of_i2c_init:
  1570                           
  1571                           	psect	text6
  1572  060A                     __ptext6:	
  1573 ;; *************** function _adc_init *****************
  1574 ;; Defined at:
  1575 ;;		line 30 in file "adc.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    5
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function _adc_init
  1605  060A                     _adc_init:
  1606  060A                     l1551:	
  1607                           ;incstack = 0
  1608                           ; Regs used in _adc_init: [wreg]
  1609                           
  1610                           
  1611                           ;adc.c: 33: ADCON1=0x02;
  1612  060A  3002               	movlw	2
  1613  060B  1683               	bsf	3,5	;RP0=1, select bank1
  1614  060C  1303               	bcf	3,6	;RP1=0, select bank1
  1615  060D  009F               	movwf	31	;volatile
  1616                           
  1617                           ;adc.c: 34: ADCON0=0x41;
  1618  060E  3041               	movlw	65
  1619  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0611  009F               	movwf	31	;volatile
  1622  0612                     l13:
  1623  0612  0008               	return
  1624  0613                     __end_of_adc_init:
  1625                           
  1626                           	psect	text7
  1627  04C7                     __ptext7:	
  1628 ;; *************** function ___lwdiv *****************
  1629 ;; Defined at:
  1630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  divisor         2   15[BANK0 ] unsigned int 
  1633 ;;  dividend        2   17[BANK0 ] unsigned int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  quotient        2   19[BANK0 ] unsigned int 
  1636 ;;  counter         1   21[BANK0 ] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  2   15[BANK0 ] unsigned int 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, btemp+1
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       4       0       0       0
  1647 ;;      Locals:         0       3       0       0       0
  1648 ;;      Temps:          0       0       0       0       0
  1649 ;;      Totals:         0       7       0       0       0
  1650 ;;Total ram usage:        7 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    5
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function ___lwdiv
  1662  04C7                     ___lwdiv:
  1663  04C7                     l1781:	
  1664                           ;incstack = 0
  1665                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1666                           
  1667  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1668  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1669  04C9  01B3               	clrf	___lwdiv@quotient
  1670  04CA  01B4               	clrf	___lwdiv@quotient+1
  1671  04CB                     l1783:
  1672  04CB  082F               	movf	___lwdiv@divisor,w
  1673  04CC  0430               	iorwf	___lwdiv@divisor+1,w
  1674  04CD  1903               	btfsc	3,2
  1675  04CE  2CD0               	goto	u1121
  1676  04CF  2CD1               	goto	u1120
  1677  04D0                     u1121:
  1678  04D0  2D08               	goto	l1803
  1679  04D1                     u1120:
  1680  04D1                     l1785:
  1681  04D1  01B5               	clrf	___lwdiv@counter
  1682  04D2  0AB5               	incf	___lwdiv@counter,f
  1683  04D3  2CDF               	goto	l1791
  1684  04D4                     l1787:
  1685  04D4  3001               	movlw	1
  1686  04D5                     u1135:
  1687  04D5  1003               	clrc
  1688  04D6  0DAF               	rlf	___lwdiv@divisor,f
  1689  04D7  0DB0               	rlf	___lwdiv@divisor+1,f
  1690  04D8  3EFF               	addlw	-1
  1691  04D9  1D03               	skipz
  1692  04DA  2CD5               	goto	u1135
  1693  04DB                     l1789:
  1694  04DB  3001               	movlw	1
  1695  04DC  00FF               	movwf	btemp+1
  1696  04DD  087F               	movf	btemp+1,w
  1697  04DE  07B5               	addwf	___lwdiv@counter,f
  1698  04DF                     l1791:
  1699  04DF  1FB0               	btfss	___lwdiv@divisor+1,7
  1700  04E0  2CE2               	goto	u1141
  1701  04E1  2CE3               	goto	u1140
  1702  04E2                     u1141:
  1703  04E2  2CD4               	goto	l1787
  1704  04E3                     u1140:
  1705  04E3                     l1793:
  1706  04E3  3001               	movlw	1
  1707  04E4                     u1155:
  1708  04E4  1003               	clrc
  1709  04E5  0DB3               	rlf	___lwdiv@quotient,f
  1710  04E6  0DB4               	rlf	___lwdiv@quotient+1,f
  1711  04E7  3EFF               	addlw	-1
  1712  04E8  1D03               	skipz
  1713  04E9  2CE4               	goto	u1155
  1714  04EA  0830               	movf	___lwdiv@divisor+1,w
  1715  04EB  0232               	subwf	___lwdiv@dividend+1,w
  1716  04EC  1D03               	skipz
  1717  04ED  2CF0               	goto	u1165
  1718  04EE  082F               	movf	___lwdiv@divisor,w
  1719  04EF  0231               	subwf	___lwdiv@dividend,w
  1720  04F0                     u1165:
  1721  04F0  1C03               	skipc
  1722  04F1  2CF3               	goto	u1161
  1723  04F2  2CF4               	goto	u1160
  1724  04F3                     u1161:
  1725  04F3  2CFB               	goto	l1799
  1726  04F4                     u1160:
  1727  04F4                     l1795:
  1728  04F4  082F               	movf	___lwdiv@divisor,w
  1729  04F5  02B1               	subwf	___lwdiv@dividend,f
  1730  04F6  0830               	movf	___lwdiv@divisor+1,w
  1731  04F7  1C03               	skipc
  1732  04F8  03B2               	decf	___lwdiv@dividend+1,f
  1733  04F9  02B2               	subwf	___lwdiv@dividend+1,f
  1734  04FA                     l1797:
  1735  04FA  1433               	bsf	___lwdiv@quotient,0
  1736  04FB                     l1799:
  1737  04FB  3001               	movlw	1
  1738  04FC                     u1175:
  1739  04FC  1003               	clrc
  1740  04FD  0CB0               	rrf	___lwdiv@divisor+1,f
  1741  04FE  0CAF               	rrf	___lwdiv@divisor,f
  1742  04FF  3EFF               	addlw	-1
  1743  0500  1D03               	skipz
  1744  0501  2CFC               	goto	u1175
  1745  0502                     l1801:
  1746  0502  3001               	movlw	1
  1747  0503  02B5               	subwf	___lwdiv@counter,f
  1748  0504  1D03               	btfss	3,2
  1749  0505  2D07               	goto	u1181
  1750  0506  2D08               	goto	u1180
  1751  0507                     u1181:
  1752  0507  2CE3               	goto	l1793
  1753  0508                     u1180:
  1754  0508                     l1803:
  1755  0508  0834               	movf	___lwdiv@quotient+1,w
  1756  0509  00B0               	movwf	?___lwdiv+1
  1757  050A  0833               	movf	___lwdiv@quotient,w
  1758  050B  00AF               	movwf	?___lwdiv
  1759  050C                     l643:
  1760  050C  0008               	return
  1761  050D                     __end_of___lwdiv:
  1762                           
  1763                           	psect	text8
  1764  002F                     __ptext8:	
  1765 ;; *************** function _ISR *****************
  1766 ;; Defined at:
  1767 ;;		line 43 in file "main.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         0       4       0       0       0
  1783 ;;      Temps:          0       6       0       0       0
  1784 ;;      Totals:         0      10       0       0       0
  1785 ;;Total ram usage:       10 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    4
  1788 ;; This function calls:
  1789 ;;		___awdiv
  1790 ;;		___awmod
  1791 ;;		_adc_amostra
  1792 ;;		_display7s
  1793 ;;		_e2pext_r
  1794 ;;		_e2pext_w
  1795 ;; This function is called by:
  1796 ;;		Interrupt level 1
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _ISR
  1802  002F                     _ISR:
  1803  002F                     i1l1807:
  1804                           
  1805                           ;main.c: 45: if (INTF) {
  1806  002F  1C8B               	btfss	11,1	;volatile
  1807  0030  2832               	goto	u119_21
  1808  0031  2833               	goto	u119_20
  1809  0032                     u119_21:
  1810  0032  2859               	goto	i1l1821
  1811  0033                     u119_20:
  1812  0033                     i1l1809:
  1813                           
  1814                           ;main.c: 48: if (!powerMode) {
  1815  0033  0848               	movf	_powerMode,w
  1816  0034  1D03               	btfss	3,2
  1817  0035  2837               	goto	u120_21
  1818  0036  2838               	goto	u120_20
  1819  0037                     u120_21:
  1820  0037  2857               	goto	i1l1817
  1821  0038                     u120_20:
  1822  0038                     i1l1811:
  1823                           
  1824                           ;main.c: 49: powerMode = 1;
  1825  0038  01C8               	clrf	_powerMode
  1826  0039  0AC8               	incf	_powerMode,f
  1827  003A                     i1l1813:
  1828                           
  1829                           ;main.c: 50: if (e2pext_r(11) == 0xFB) {
  1830  003A  300B               	movlw	11
  1831  003B  00F4               	movwf	e2pext_r@addr
  1832  003C  3000               	movlw	0
  1833  003D  00F5               	movwf	e2pext_r@addr+1
  1834  003E  120A  118A  247A  120A  118A  	fcall	_e2pext_r
  1835  0043  3AFB               	xorlw	251
  1836  0044  1D03               	skipz
  1837  0045  2847               	goto	u121_21
  1838  0046  2848               	goto	u121_20
  1839  0047                     u121_21:
  1840  0047  2858               	goto	i1l1819
  1841  0048                     u121_20:
  1842  0048                     i1l1815:
  1843                           
  1844                           ;main.c: 51: tempSet = (unsigned char) e2pext_r(10);
  1845  0048  300A               	movlw	10
  1846  0049  00F4               	movwf	e2pext_r@addr
  1847  004A  3000               	movlw	0
  1848  004B  00F5               	movwf	e2pext_r@addr+1
  1849  004C  120A  118A  247A  120A  118A  	fcall	_e2pext_r
  1850  0051  00FF               	movwf	btemp+1
  1851  0052  087F               	movf	btemp+1,w
  1852  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0055  00D4               	movwf	_tempSet
  1855  0056  2858               	goto	i1l1819
  1856  0057                     i1l1817:
  1857                           
  1858                           ;main.c: 55: powerMode = 0;
  1859  0057  01C8               	clrf	_powerMode
  1860  0058                     i1l1819:
  1861                           
  1862                           ;main.c: 57: };main.c: 58: INTF = 0;
  1863  0058  108B               	bcf	11,1	;volatile
  1864  0059                     i1l1821:
  1865                           
  1866                           ;main.c: 61: };main.c: 62: if (TMR2IF && powerMode) {
  1867  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1868  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1869  005B  1C8C               	btfss	12,1	;volatile
  1870  005C  285E               	goto	u122_21
  1871  005D  285F               	goto	u122_20
  1872  005E                     u122_21:
  1873  005E  28F2               	goto	i1l1853
  1874  005F                     u122_20:
  1875  005F                     i1l1823:
  1876  005F  0848               	movf	_powerMode,w
  1877  0060  1903               	btfsc	3,2
  1878  0061  2863               	goto	u123_21
  1879  0062  2864               	goto	u123_20
  1880  0063                     u123_21:
  1881  0063  28F2               	goto	i1l1853
  1882  0064                     u123_20:
  1883  0064                     i1l1825:
  1884                           
  1885                           ;main.c: 65: if (segFlag) {
  1886  0064  0842               	movf	_segFlag,w
  1887  0065  1903               	btfsc	3,2
  1888  0066  2868               	goto	u124_21
  1889  0067  2869               	goto	u124_20
  1890  0068                     u124_21:
  1891  0068  28A8               	goto	i1l1837
  1892  0069                     u124_20:
  1893  0069                     i1l1827:
  1894                           
  1895                           ;main.c: 66: PORTA = 0x10;
  1896  0069  3010               	movlw	16
  1897  006A  0085               	movwf	5	;volatile
  1898  006B                     i1l1829:
  1899                           
  1900                           ;main.c: 67: if (tempMode) {
  1901  006B  0849               	movf	_tempMode,w
  1902  006C  1903               	btfsc	3,2
  1903  006D  286F               	goto	u125_21
  1904  006E  2870               	goto	u125_20
  1905  006F                     u125_21:
  1906  006F  2887               	goto	i1l1833
  1907  0070                     u125_20:
  1908  0070                     i1l1831:
  1909                           
  1910                           ;main.c: 68: firstDigit = tempSet / 10;
  1911  0070  300A               	movlw	10
  1912  0071  00F0               	movwf	___awdiv@divisor
  1913  0072  3000               	movlw	0
  1914  0073  00F1               	movwf	___awdiv@divisor+1
  1915  0074  0854               	movf	_tempSet,w
  1916  0075  00A5               	movwf	??_ISR
  1917  0076  01A6               	clrf	??_ISR+1
  1918  0077  0825               	movf	??_ISR,w
  1919  0078  00F2               	movwf	___awdiv@dividend
  1920  0079  0826               	movf	??_ISR+1,w
  1921  007A  00F3               	movwf	___awdiv@dividend+1
  1922  007B  120A  118A  22AE  120A  118A  	fcall	___awdiv
  1923  0080  0870               	movf	?___awdiv,w
  1924  0081  00FF               	movwf	btemp+1
  1925  0082  087F               	movf	btemp+1,w
  1926  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0085  00BF               	movwf	_firstDigit
  1929                           
  1930                           ;main.c: 70: } else {
  1931  0086  289D               	goto	i1l1835
  1932  0087                     i1l1833:
  1933                           
  1934                           ;main.c: 71: firstDigit = tempCurr / 10;
  1935  0087  300A               	movlw	10
  1936  0088  00F0               	movwf	___awdiv@divisor
  1937  0089  3000               	movlw	0
  1938  008A  00F1               	movwf	___awdiv@divisor+1
  1939  008B  0840               	movf	_tempCurr,w
  1940  008C  00A5               	movwf	??_ISR
  1941  008D  01A6               	clrf	??_ISR+1
  1942  008E  0825               	movf	??_ISR,w
  1943  008F  00F2               	movwf	___awdiv@dividend
  1944  0090  0826               	movf	??_ISR+1,w
  1945  0091  00F3               	movwf	___awdiv@dividend+1
  1946  0092  120A  118A  22AE  120A  118A  	fcall	___awdiv
  1947  0097  0870               	movf	?___awdiv,w
  1948  0098  00FF               	movwf	btemp+1
  1949  0099  087F               	movf	btemp+1,w
  1950  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1951  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1952  009C  00BF               	movwf	_firstDigit
  1953  009D                     i1l1835:
  1954                           
  1955                           ;main.c: 73: };main.c: 76: PORTD = display7s(firstDigit) & mask7S;
  1956  009D  083F               	movf	_firstDigit,w
  1957  009E  120A  118A  23D3  120A  118A  	fcall	_display7s
  1958  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1959  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1960  00A5  0556               	andwf	_mask7S,w
  1961  00A6  0088               	movwf	8	;volatile
  1962                           
  1963                           ;main.c: 78: } else {
  1964  00A7  28E6               	goto	i1l1847
  1965  00A8                     i1l1837:
  1966                           
  1967                           ;main.c: 79: PORTA = 0x20;
  1968  00A8  3020               	movlw	32
  1969  00A9  0085               	movwf	5	;volatile
  1970  00AA                     i1l1839:
  1971                           
  1972                           ;main.c: 80: if (tempMode) {
  1973  00AA  0849               	movf	_tempMode,w
  1974  00AB  1903               	btfsc	3,2
  1975  00AC  28AE               	goto	u126_21
  1976  00AD  28AF               	goto	u126_20
  1977  00AE                     u126_21:
  1978  00AE  28C6               	goto	i1l1843
  1979  00AF                     u126_20:
  1980  00AF                     i1l1841:
  1981                           
  1982                           ;main.c: 81: secondDigit = tempSet % 10;
  1983  00AF  300A               	movlw	10
  1984  00B0  00F0               	movwf	___awmod@divisor
  1985  00B1  3000               	movlw	0
  1986  00B2  00F1               	movwf	___awmod@divisor+1
  1987  00B3  0854               	movf	_tempSet,w
  1988  00B4  00A5               	movwf	??_ISR
  1989  00B5  01A6               	clrf	??_ISR+1
  1990  00B6  0825               	movf	??_ISR,w
  1991  00B7  00F2               	movwf	___awmod@dividend
  1992  00B8  0826               	movf	??_ISR+1,w
  1993  00B9  00F3               	movwf	___awmod@dividend+1
  1994  00BA  120A  118A  237A  120A  118A  	fcall	___awmod
  1995  00BF  0870               	movf	?___awmod,w
  1996  00C0  00FF               	movwf	btemp+1
  1997  00C1  087F               	movf	btemp+1,w
  1998  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1999  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  2000  00C4  00BE               	movwf	_secondDigit
  2001                           
  2002                           ;main.c: 83: } else {
  2003  00C5  28DC               	goto	i1l1845
  2004  00C6                     i1l1843:
  2005                           
  2006                           ;main.c: 84: secondDigit = tempCurr % 10;
  2007  00C6  300A               	movlw	10
  2008  00C7  00F0               	movwf	___awmod@divisor
  2009  00C8  3000               	movlw	0
  2010  00C9  00F1               	movwf	___awmod@divisor+1
  2011  00CA  0840               	movf	_tempCurr,w
  2012  00CB  00A5               	movwf	??_ISR
  2013  00CC  01A6               	clrf	??_ISR+1
  2014  00CD  0825               	movf	??_ISR,w
  2015  00CE  00F2               	movwf	___awmod@dividend
  2016  00CF  0826               	movf	??_ISR+1,w
  2017  00D0  00F3               	movwf	___awmod@dividend+1
  2018  00D1  120A  118A  237A  120A  118A  	fcall	___awmod
  2019  00D6  0870               	movf	?___awmod,w
  2020  00D7  00FF               	movwf	btemp+1
  2021  00D8  087F               	movf	btemp+1,w
  2022  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  2023  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  2024  00DB  00BE               	movwf	_secondDigit
  2025  00DC                     i1l1845:
  2026                           
  2027                           ;main.c: 86: };main.c: 89: PORTD = display7s(secondDigit) & mask7S;
  2028  00DC  083E               	movf	_secondDigit,w
  2029  00DD  120A  118A  23D3  120A  118A  	fcall	_display7s
  2030  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  2031  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  2032  00E4  0556               	andwf	_mask7S,w
  2033  00E5  0088               	movwf	8	;volatile
  2034  00E6                     i1l1847:
  2035                           
  2036                           ;main.c: 90: };main.c: 91: segFlag = !segFlag;
  2037  00E6  0842               	movf	_segFlag,w
  2038  00E7  1903               	btfsc	3,2
  2039  00E8  28EA               	goto	u127_21
  2040  00E9  28EC               	goto	u127_20
  2041  00EA                     u127_21:
  2042  00EA  3001               	movlw	1
  2043  00EB  28ED               	goto	u128_20
  2044  00EC                     u127_20:
  2045  00EC  3000               	movlw	0
  2046  00ED                     u128_20:
  2047  00ED  00FF               	movwf	btemp+1
  2048  00EE  087F               	movf	btemp+1,w
  2049  00EF  00C2               	movwf	_segFlag
  2050  00F0                     i1l1849:
  2051                           
  2052                           ;main.c: 92: TMR2IF = 0;
  2053  00F0  108C               	bcf	12,1	;volatile
  2054  00F1                     i1l1851:
  2055                           
  2056                           ;main.c: 93: TMR2ON = 1;
  2057  00F1  1512               	bsf	18,2	;volatile
  2058  00F2                     i1l1853:
  2059                           
  2060                           ;main.c: 95: };main.c: 96: if (TMR0IF && powerMode) {
  2061  00F2  1D0B               	btfss	11,2	;volatile
  2062  00F3  28F5               	goto	u129_21
  2063  00F4  28F6               	goto	u129_20
  2064  00F5                     u129_21:
  2065  00F5  2966               	goto	i1l1905
  2066  00F6                     u129_20:
  2067  00F6                     i1l1855:
  2068  00F6  0848               	movf	_powerMode,w
  2069  00F7  1903               	btfsc	3,2
  2070  00F8  28FA               	goto	u130_21
  2071  00F9  28FB               	goto	u130_20
  2072  00FA                     u130_21:
  2073  00FA  2966               	goto	i1l1905
  2074  00FB                     u130_20:
  2075  00FB                     i1l1857:
  2076                           
  2077                           ;main.c: 99: if (tempMode) {
  2078  00FB  0849               	movf	_tempMode,w
  2079  00FC  1903               	btfsc	3,2
  2080  00FD  28FF               	goto	u131_21
  2081  00FE  2900               	goto	u131_20
  2082  00FF                     u131_21:
  2083  00FF  291B               	goto	i1l1873
  2084  0100                     u131_20:
  2085  0100                     i1l1859:
  2086                           
  2087                           ;main.c: 100: delay7S += 1;
  2088  0100  3001               	movlw	1
  2089  0101  00FF               	movwf	btemp+1
  2090  0102  087F               	movf	btemp+1,w
  2091  0103  07C5               	addwf	_delay7S,f
  2092  0104                     i1l1861:
  2093                           
  2094                           ;main.c: 101: if (delay7S == 2) {
  2095  0104  3002               	movlw	2
  2096  0105  0645               	xorwf	_delay7S,w
  2097  0106  1D03               	btfss	3,2
  2098  0107  2909               	goto	u132_21
  2099  0108  290A               	goto	u132_20
  2100  0109                     u132_21:
  2101  0109  291B               	goto	i1l1873
  2102  010A                     u132_20:
  2103  010A                     i1l1863:
  2104                           
  2105                           ;main.c: 102: mask7S = mask7S == 0xff ? 0x00 : 0xff;
  2106  010A  0A56               	incf	_mask7S,w
  2107  010B  1903               	btfsc	3,2
  2108  010C  290E               	goto	u133_21
  2109  010D  290F               	goto	u133_20
  2110  010E                     u133_21:
  2111  010E  2914               	goto	i1l1867
  2112  010F                     u133_20:
  2113  010F                     i1l1865:
  2114  010F  30FF               	movlw	255
  2115  0110  00AB               	movwf	_ISR$275
  2116  0111  3000               	movlw	0
  2117  0112  00AC               	movwf	_ISR$275+1
  2118  0113  2916               	goto	i1l1869
  2119  0114                     i1l1867:
  2120  0114  01AB               	clrf	_ISR$275
  2121  0115  01AC               	clrf	_ISR$275+1
  2122  0116                     i1l1869:
  2123  0116  082B               	movf	_ISR$275,w
  2124  0117  00FF               	movwf	btemp+1
  2125  0118  087F               	movf	btemp+1,w
  2126  0119  00D6               	movwf	_mask7S
  2127  011A                     i1l1871:
  2128                           
  2129                           ;main.c: 103: delay7S = 0;
  2130  011A  01C5               	clrf	_delay7S
  2131  011B                     i1l1873:
  2132                           
  2133                           ;main.c: 104: };main.c: 105: };main.c: 107: if (heatMode) {
  2134  011B  0847               	movf	_heatMode,w
  2135  011C  1903               	btfsc	3,2
  2136  011D  291F               	goto	u134_21
  2137  011E  2920               	goto	u134_20
  2138  011F                     u134_21:
  2139  011F  293B               	goto	i1l1889
  2140  0120                     u134_20:
  2141  0120                     i1l1875:
  2142                           
  2143                           ;main.c: 108: delayLED += 1;
  2144  0120  3001               	movlw	1
  2145  0121  00FF               	movwf	btemp+1
  2146  0122  087F               	movf	btemp+1,w
  2147  0123  07C4               	addwf	_delayLED,f
  2148  0124                     i1l1877:
  2149                           
  2150                           ;main.c: 109: if (delayLED == 2) {
  2151  0124  3002               	movlw	2
  2152  0125  0644               	xorwf	_delayLED,w
  2153  0126  1D03               	btfss	3,2
  2154  0127  2929               	goto	u135_21
  2155  0128  292A               	goto	u135_20
  2156  0129                     u135_21:
  2157  0129  293B               	goto	i1l1889
  2158  012A                     u135_20:
  2159  012A                     i1l1879:
  2160                           
  2161                           ;main.c: 110: maskLED = maskLED == 0xff ? 0x00 : 0xff;
  2162  012A  0A55               	incf	_maskLED,w
  2163  012B  1903               	btfsc	3,2
  2164  012C  292E               	goto	u136_21
  2165  012D  292F               	goto	u136_20
  2166  012E                     u136_21:
  2167  012E  2934               	goto	i1l1883
  2168  012F                     u136_20:
  2169  012F                     i1l1881:
  2170  012F  30FF               	movlw	255
  2171  0130  00AD               	movwf	_ISR$276
  2172  0131  3000               	movlw	0
  2173  0132  00AE               	movwf	_ISR$276+1
  2174  0133  2936               	goto	i1l1885
  2175  0134                     i1l1883:
  2176  0134  01AD               	clrf	_ISR$276
  2177  0135  01AE               	clrf	_ISR$276+1
  2178  0136                     i1l1885:
  2179  0136  082D               	movf	_ISR$276,w
  2180  0137  00FF               	movwf	btemp+1
  2181  0138  087F               	movf	btemp+1,w
  2182  0139  00D5               	movwf	_maskLED
  2183  013A                     i1l1887:
  2184                           
  2185                           ;main.c: 111: delayLED = 0;
  2186  013A  01C4               	clrf	_delayLED
  2187  013B                     i1l1889:
  2188                           
  2189                           ;main.c: 112: };main.c: 113: };main.c: 116: tempCurr = adc_amostra(2);
  2190  013B  3002               	movlw	2
  2191  013C  120A  118A  250D  120A  118A  	fcall	_adc_amostra
  2192  0141  0870               	movf	?_adc_amostra,w
  2193  0142  00FF               	movwf	btemp+1
  2194  0143  087F               	movf	btemp+1,w
  2195  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0146  00C0               	movwf	_tempCurr
  2198  0147                     i1l1891:
  2199                           
  2200                           ;main.c: 117: tempCurr /= 2;
  2201  0147  1003               	clrc
  2202  0148  0CC0               	rrf	_tempCurr,f
  2203  0149                     i1l1893:
  2204                           
  2205                           ;main.c: 119: if (index == 10) {
  2206  0149  300A               	movlw	10
  2207  014A  063D               	xorwf	_index,w
  2208  014B  1D03               	btfss	3,2
  2209  014C  294E               	goto	u137_21
  2210  014D  294F               	goto	u137_20
  2211  014E                     u137_21:
  2212  014E  2959               	goto	i1l1899
  2213  014F                     u137_20:
  2214  014F                     i1l1895:
  2215                           
  2216                           ;main.c: 120: index = 0;
  2217  014F  01BD               	clrf	_index
  2218  0150                     i1l1897:
  2219                           
  2220                           ;main.c: 121: tempHist[index] = tempCurr;
  2221  0150  0840               	movf	_tempCurr,w
  2222  0151  00FF               	movwf	btemp+1
  2223  0152  083D               	movf	_index,w
  2224  0153  3E4A               	addlw	(low (_tempHist| 0))& (0+255)
  2225  0154  0084               	movwf	4
  2226  0155  087F               	movf	btemp+1,w
  2227  0156  1383               	bcf	3,7	;select IRP bank0
  2228  0157  0080               	movwf	0
  2229                           
  2230                           ;main.c: 122: } else {
  2231  0158  2965               	goto	i1l1903
  2232  0159                     i1l1899:
  2233                           
  2234                           ;main.c: 123: tempHist[index] = tempCurr;
  2235  0159  0840               	movf	_tempCurr,w
  2236  015A  00FF               	movwf	btemp+1
  2237  015B  083D               	movf	_index,w
  2238  015C  3E4A               	addlw	(low (_tempHist| 0))& (0+255)
  2239  015D  0084               	movwf	4
  2240  015E  087F               	movf	btemp+1,w
  2241  015F  1383               	bcf	3,7	;select IRP bank0
  2242  0160  0080               	movwf	0
  2243  0161                     i1l1901:
  2244                           
  2245                           ;main.c: 124: index++;
  2246  0161  3001               	movlw	1
  2247  0162  00FF               	movwf	btemp+1
  2248  0163  087F               	movf	btemp+1,w
  2249  0164  07BD               	addwf	_index,f
  2250  0165                     i1l1903:
  2251                           
  2252                           ;main.c: 125: };main.c: 127: TMR0IF = 0;
  2253  0165  110B               	bcf	11,2	;volatile
  2254  0166                     i1l1905:
  2255                           
  2256                           ;main.c: 128: };main.c: 129: if (TMR1IF && powerMode) {
  2257  0166  1C0C               	btfss	12,0	;volatile
  2258  0167  2969               	goto	u138_21
  2259  0168  296A               	goto	u138_20
  2260  0169                     u138_21:
  2261  0169  29A8               	goto	i1l237
  2262  016A                     u138_20:
  2263  016A                     i1l1907:
  2264  016A  0848               	movf	_powerMode,w
  2265  016B  1903               	btfsc	3,2
  2266  016C  296E               	goto	u139_21
  2267  016D  296F               	goto	u139_20
  2268  016E                     u139_21:
  2269  016E  29A8               	goto	i1l237
  2270  016F                     u139_20:
  2271  016F                     i1l1909:
  2272                           
  2273                           ;main.c: 131: if (tempMode && notPressed < 5) {
  2274  016F  0849               	movf	_tempMode,w
  2275  0170  1903               	btfsc	3,2
  2276  0171  2973               	goto	u140_21
  2277  0172  2974               	goto	u140_20
  2278  0173                     u140_21:
  2279  0173  297E               	goto	i1l1915
  2280  0174                     u140_20:
  2281  0174                     i1l1911:
  2282  0174  3005               	movlw	5
  2283  0175  023C               	subwf	_notPressed,w
  2284  0176  1803               	skipnc
  2285  0177  2979               	goto	u141_21
  2286  0178  297A               	goto	u141_20
  2287  0179                     u141_21:
  2288  0179  297E               	goto	i1l1915
  2289  017A                     u141_20:
  2290  017A                     i1l1913:
  2291                           
  2292                           ;main.c: 133: notPressed += 1;
  2293  017A  3001               	movlw	1
  2294  017B  00FF               	movwf	btemp+1
  2295  017C  087F               	movf	btemp+1,w
  2296  017D  07BC               	addwf	_notPressed,f
  2297  017E                     i1l1915:
  2298                           
  2299                           ;main.c: 139: };main.c: 140: if (notPressed == 5) {
  2300  017E  3005               	movlw	5
  2301  017F  063C               	xorwf	_notPressed,w
  2302  0180  1D03               	btfss	3,2
  2303  0181  2983               	goto	u142_21
  2304  0182  2984               	goto	u142_20
  2305  0183                     u142_21:
  2306  0183  29A4               	goto	i1l236
  2307  0184                     u142_20:
  2308  0184                     i1l1917:
  2309                           
  2310                           ;main.c: 141: tempMode = 0;
  2311  0184  01C9               	clrf	_tempMode
  2312                           
  2313                           ;main.c: 142: notPressed = 0;
  2314  0185  01BC               	clrf	_notPressed
  2315  0186                     i1l1919:
  2316                           
  2317                           ;main.c: 143: mask7S = 0xFF;
  2318  0186  30FF               	movlw	255
  2319  0187  00FF               	movwf	btemp+1
  2320  0188  087F               	movf	btemp+1,w
  2321  0189  00D6               	movwf	_mask7S
  2322  018A                     i1l1921:
  2323                           
  2324                           ;main.c: 144: e2pext_w(10, (unsigned char) tempSet);
  2325  018A  300A               	movlw	10
  2326  018B  00F9               	movwf	e2pext_w@addr
  2327  018C  3000               	movlw	0
  2328  018D  00FA               	movwf	e2pext_w@addr+1
  2329  018E  0854               	movf	_tempSet,w
  2330  018F  00FF               	movwf	btemp+1
  2331  0190  087F               	movf	btemp+1,w
  2332  0191  00FB               	movwf	e2pext_w@val
  2333  0192  120A  118A  2315  120A  118A  	fcall	_e2pext_w
  2334  0197                     i1l1923:
  2335                           
  2336                           ;main.c: 145: e2pext_w(11, 0xFB);
  2337  0197  300B               	movlw	11
  2338  0198  00F9               	movwf	e2pext_w@addr
  2339  0199  3000               	movlw	0
  2340  019A  00FA               	movwf	e2pext_w@addr+1
  2341  019B  30FB               	movlw	251
  2342  019C  00FF               	movwf	btemp+1
  2343  019D  087F               	movf	btemp+1,w
  2344  019E  00FB               	movwf	e2pext_w@val
  2345  019F  120A  118A  2315  120A  118A  	fcall	_e2pext_w
  2346  01A4                     i1l236:
  2347                           
  2348                           ;main.c: 153: };main.c: 154: TMR1IF = 0;
  2349  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2350  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2351  01A6  100C               	bcf	12,0	;volatile
  2352                           
  2353                           ;main.c: 155: TMR1ON = 1;
  2354  01A7  1410               	bsf	16,0	;volatile
  2355  01A8                     i1l237:
  2356  01A8  082A               	movf	??_ISR+5,w
  2357  01A9  00FF               	movwf	btemp+1
  2358  01AA  0829               	movf	??_ISR+4,w
  2359  01AB  008A               	movwf	10
  2360  01AC  0828               	movf	??_ISR+3,w
  2361  01AD  0084               	movwf	4
  2362  01AE  0E27               	swapf	(??_ISR+2)^0,w
  2363  01AF  0083               	movwf	3
  2364  01B0  0EFE               	swapf	btemp,f
  2365  01B1  0E7E               	swapf	btemp,w
  2366  01B2  0009               	retfie
  2367  01B3                     __end_of_ISR:
  2368                           
  2369                           	psect	intentry
  2370  0004                     __pintentry:	
  2371                           ;incstack = 0
  2372                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2373                           
  2374  0004                     interrupt_function:
  2375  007E                     saved_w	set	btemp
  2376  0004  00FE               	movwf	btemp
  2377  0005  0E03               	swapf	3,w
  2378  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0008  00A7               	movwf	??_ISR+2
  2381  0009  0804               	movf	4,w
  2382  000A  00A8               	movwf	??_ISR+3
  2383  000B  080A               	movf	10,w
  2384  000C  00A9               	movwf	??_ISR+4
  2385  000D  087F               	movf	btemp+1,w
  2386  000E  00AA               	movwf	??_ISR+5
  2387  000F  120A  118A  282F   	ljmp	_ISR
  2388                           
  2389                           	psect	text9
  2390  0315                     __ptext9:	
  2391 ;; *************** function _e2pext_w *****************
  2392 ;; Defined at:
  2393 ;;		line 65 in file "eeprom_ext.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  addr            2    9[COMMON] unsigned int 
  2396 ;;  val             1   11[COMMON] unsigned char 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  tmp             2    3[BANK0 ] unsigned int 
  2399 ;;  nt              1    2[BANK0 ] unsigned char 
  2400 ;;  al              1    1[BANK0 ] unsigned char 
  2401 ;;  ah              1    0[BANK0 ] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         3       0       0       0       0
  2412 ;;      Locals:         0       5       0       0       0
  2413 ;;      Temps:          2       0       0       0       0
  2414 ;;      Totals:         5       5       0       0       0
  2415 ;;Total ram usage:       10 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    3
  2418 ;; This function calls:
  2419 ;;		_e2pext_r
  2420 ;;		_i2c_start
  2421 ;;		_i2c_stop
  2422 ;;		_i2c_wb
  2423 ;; This function is called by:
  2424 ;;		_ISR
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _e2pext_w
  2430  0315                     _e2pext_w:
  2431  0315                     i1l1643:	
  2432                           ;incstack = 0
  2433                           ; Regs used in _e2pext_w: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2434                           
  2435                           
  2436                           ;eeprom_ext.c: 67: unsigned int tmp;;eeprom_ext.c: 68: unsigned char ah;;eeprom_ext.c: 6
      +                          9: unsigned char al;;eeprom_ext.c: 70: unsigned char nt;;eeprom_ext.c: 72: tmp=val;
  2437  0315  087B               	movf	e2pext_w@val,w
  2438  0316  00FC               	movwf	??_e2pext_w
  2439  0317  01FD               	clrf	??_e2pext_w+1
  2440  0318  087C               	movf	??_e2pext_w,w
  2441  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2442  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2443  031B  00A3               	movwf	e2pext_w@tmp
  2444  031C  087D               	movf	??_e2pext_w+1,w
  2445  031D  00A4               	movwf	e2pext_w@tmp+1
  2446  031E                     i1l1645:
  2447                           
  2448                           ;eeprom_ext.c: 73: ah=(addr&0x0100)>>8;
  2449  031E  087A               	movf	e2pext_w@addr+1,w
  2450  031F  3901               	andlw	1
  2451  0320  00FF               	movwf	btemp+1
  2452  0321  087F               	movf	btemp+1,w
  2453  0322  00A0               	movwf	e2pext_w@ah
  2454  0323                     i1l1647:
  2455                           
  2456                           ;eeprom_ext.c: 74: al=addr&0x00FF;
  2457  0323  0879               	movf	e2pext_w@addr,w
  2458  0324  00FF               	movwf	btemp+1
  2459  0325  087F               	movf	btemp+1,w
  2460  0326  00A1               	movwf	e2pext_w@al
  2461  0327                     i1l1649:
  2462                           
  2463                           ;eeprom_ext.c: 75: nt=0;
  2464  0327  01A2               	clrf	e2pext_w@nt
  2465  0328                     i1l1651:
  2466                           
  2467                           ;eeprom_ext.c: 78: {;eeprom_ext.c: 79: i2c_start();
  2468  0328  120A  118A  25CB  120A  118A  	fcall	_i2c_start
  2469  032D                     i1l1653:
  2470                           
  2471                           ;eeprom_ext.c: 80: if(ah)
  2472  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2473  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2474  032F  0820               	movf	e2pext_w@ah,w
  2475  0330  1903               	btfsc	3,2
  2476  0331  2B33               	goto	u90_21
  2477  0332  2B34               	goto	u90_20
  2478  0333                     u90_21:
  2479  0333  2B3B               	goto	i1l1657
  2480  0334                     u90_20:
  2481  0334                     i1l1655:
  2482                           
  2483                           ;eeprom_ext.c: 81: {;eeprom_ext.c: 82: i2c_wb(0xA2);
  2484  0334  30A2               	movlw	162
  2485  0335  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2486                           
  2487                           ;eeprom_ext.c: 83: }
  2488  033A  2B41               	goto	i1l66
  2489  033B                     i1l1657:
  2490                           
  2491                           ;eeprom_ext.c: 84: else;eeprom_ext.c: 85: {;eeprom_ext.c: 86: i2c_wb(0xA0);
  2492  033B  30A0               	movlw	160
  2493  033C  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2494  0341                     i1l66:
  2495                           
  2496                           ;eeprom_ext.c: 87: };eeprom_ext.c: 88: i2c_wb(al);
  2497  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0343  0821               	movf	e2pext_w@al,w
  2500  0344  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2501                           
  2502                           ;eeprom_ext.c: 89: i2c_wb(tmp);
  2503  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2504  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2505  034B  0823               	movf	e2pext_w@tmp,w
  2506  034C  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2507  0351                     i1l1659:
  2508                           
  2509                           ;eeprom_ext.c: 90: i2c_stop();
  2510  0351  120A  118A  25B9  120A  118A  	fcall	_i2c_stop
  2511  0356                     i1l1661:
  2512                           
  2513                           ;eeprom_ext.c: 92: nt++;
  2514  0356  3001               	movlw	1
  2515  0357  00FF               	movwf	btemp+1
  2516  0358  087F               	movf	btemp+1,w
  2517  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2518  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2519  035B  07A2               	addwf	e2pext_w@nt,f
  2520  035C                     i1l1663:
  2521                           
  2522                           ;eeprom_ext.c: 93: };eeprom_ext.c: 94: while((tmp != e2pext_r(addr))&&(nt < 10));
  2523  035C  087A               	movf	e2pext_w@addr+1,w
  2524  035D  00F5               	movwf	e2pext_r@addr+1
  2525  035E  0879               	movf	e2pext_w@addr,w
  2526  035F  00F4               	movwf	e2pext_r@addr
  2527  0360  120A  118A  247A  120A  118A  	fcall	_e2pext_r
  2528  0365  00FC               	movwf	??_e2pext_w
  2529  0366  01FD               	clrf	??_e2pext_w+1
  2530  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0369  0824               	movf	e2pext_w@tmp+1,w
  2533  036A  067D               	xorwf	??_e2pext_w+1,w
  2534  036B  1D03               	skipz
  2535  036C  2B6F               	goto	u91_25
  2536  036D  0823               	movf	e2pext_w@tmp,w
  2537  036E  067C               	xorwf	??_e2pext_w,w
  2538  036F                     u91_25:
  2539  036F  1903               	skipnz
  2540  0370  2B72               	goto	u91_21
  2541  0371  2B73               	goto	u91_20
  2542  0372                     u91_21:
  2543  0372  2B79               	goto	i1l70
  2544  0373                     u91_20:
  2545  0373                     i1l1665:
  2546  0373  300A               	movlw	10
  2547  0374  0222               	subwf	e2pext_w@nt,w
  2548  0375  1C03               	skipc
  2549  0376  2B78               	goto	u92_21
  2550  0377  2B79               	goto	u92_20
  2551  0378                     u92_21:
  2552  0378  2B28               	goto	i1l1651
  2553  0379                     u92_20:
  2554  0379                     i1l70:
  2555  0379  0008               	return
  2556  037A                     __end_of_e2pext_w:
  2557                           
  2558                           	psect	text10
  2559  047A                     __ptext10:	
  2560 ;; *************** function _e2pext_r *****************
  2561 ;; Defined at:
  2562 ;;		line 29 in file "eeprom_ext.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  addr            2    4[COMMON] unsigned int 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  ah              1    8[COMMON] unsigned char 
  2567 ;;  al              1    7[COMMON] unsigned char 
  2568 ;;  ret             1    6[COMMON] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      unsigned char 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2578 ;;      Params:         2       0       0       0       0
  2579 ;;      Locals:         3       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0
  2581 ;;      Totals:         5       0       0       0       0
  2582 ;;Total ram usage:        5 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    2
  2585 ;; This function calls:
  2586 ;;		_i2c_rb
  2587 ;;		_i2c_start
  2588 ;;		_i2c_stop
  2589 ;;		_i2c_wb
  2590 ;; This function is called by:
  2591 ;;		_e2pext_w
  2592 ;;		_ISR
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _e2pext_r
  2598  047A                     _e2pext_r:
  2599  047A                     i1l1525:	
  2600                           ;incstack = 0
  2601                           ; Regs used in _e2pext_r: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2602                           
  2603                           
  2604                           ;eeprom_ext.c: 31: unsigned char ret;;eeprom_ext.c: 32: unsigned char ah;;eeprom_ext.c: 
      +                          33: unsigned char al;;eeprom_ext.c: 35: ah=(addr&0x0100)>>8;
  2605  047A  0875               	movf	e2pext_r@addr+1,w
  2606  047B  3901               	andlw	1
  2607  047C  00FF               	movwf	btemp+1
  2608  047D  087F               	movf	btemp+1,w
  2609  047E  00F8               	movwf	e2pext_r@ah
  2610  047F                     i1l1527:
  2611                           
  2612                           ;eeprom_ext.c: 36: al=addr&0x00FF;
  2613  047F  0874               	movf	e2pext_r@addr,w
  2614  0480  00FF               	movwf	btemp+1
  2615  0481  087F               	movf	btemp+1,w
  2616  0482  00F7               	movwf	e2pext_r@al
  2617  0483                     i1l1529:
  2618                           
  2619                           ;eeprom_ext.c: 38: i2c_start();
  2620  0483  120A  118A  25CB  120A  118A  	fcall	_i2c_start
  2621  0488                     i1l1531:
  2622                           
  2623                           ;eeprom_ext.c: 39: if(ah)
  2624  0488  0878               	movf	e2pext_r@ah,w
  2625  0489  1903               	btfsc	3,2
  2626  048A  2C8C               	goto	u86_21
  2627  048B  2C8D               	goto	u86_20
  2628  048C                     u86_21:
  2629  048C  2C94               	goto	i1l1535
  2630  048D                     u86_20:
  2631  048D                     i1l1533:
  2632                           
  2633                           ;eeprom_ext.c: 40: {;eeprom_ext.c: 41: i2c_wb(0xA2);
  2634  048D  30A2               	movlw	162
  2635  048E  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2636                           
  2637                           ;eeprom_ext.c: 42: }
  2638  0493  2C9A               	goto	i1l58
  2639  0494                     i1l1535:
  2640                           
  2641                           ;eeprom_ext.c: 43: else;eeprom_ext.c: 44: {;eeprom_ext.c: 45: i2c_wb(0xA0);
  2642  0494  30A0               	movlw	160
  2643  0495  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2644  049A                     i1l58:
  2645                           
  2646                           ;eeprom_ext.c: 46: };eeprom_ext.c: 47: i2c_wb(al);
  2647  049A  0877               	movf	e2pext_r@al,w
  2648  049B  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2649  04A0                     i1l1537:
  2650                           
  2651                           ;eeprom_ext.c: 49: i2c_start();
  2652  04A0  120A  118A  25CB  120A  118A  	fcall	_i2c_start
  2653  04A5                     i1l1539:
  2654                           
  2655                           ;eeprom_ext.c: 50: if(ah)
  2656  04A5  0878               	movf	e2pext_r@ah,w
  2657  04A6  1903               	btfsc	3,2
  2658  04A7  2CA9               	goto	u87_21
  2659  04A8  2CAA               	goto	u87_20
  2660  04A9                     u87_21:
  2661  04A9  2CB1               	goto	i1l1543
  2662  04AA                     u87_20:
  2663  04AA                     i1l1541:
  2664                           
  2665                           ;eeprom_ext.c: 51: {;eeprom_ext.c: 52: i2c_wb(0xA3);
  2666  04AA  30A3               	movlw	163
  2667  04AB  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2668                           
  2669                           ;eeprom_ext.c: 53: }
  2670  04B0  2CB7               	goto	i1l60
  2671  04B1                     i1l1543:
  2672                           
  2673                           ;eeprom_ext.c: 54: else;eeprom_ext.c: 55: {;eeprom_ext.c: 56: i2c_wb(0xA1);
  2674  04B1  30A1               	movlw	161
  2675  04B2  120A  118A  2553  120A  118A  	fcall	_i2c_wb
  2676  04B7                     i1l60:
  2677                           
  2678                           ;eeprom_ext.c: 57: };eeprom_ext.c: 58: ret=i2c_rb(1);
  2679  04B7  3001               	movlw	1
  2680  04B8  120A  118A  242A  120A  118A  	fcall	_i2c_rb
  2681  04BD  00FF               	movwf	btemp+1
  2682  04BE  087F               	movf	btemp+1,w
  2683  04BF  00F6               	movwf	e2pext_r@ret
  2684  04C0                     i1l1545:
  2685                           
  2686                           ;eeprom_ext.c: 59: i2c_stop();
  2687  04C0  120A  118A  25B9  120A  118A  	fcall	_i2c_stop
  2688  04C5                     i1l1547:
  2689                           
  2690                           ;eeprom_ext.c: 61: return ret;
  2691  04C5  0876               	movf	e2pext_r@ret,w
  2692  04C6                     i1l61:
  2693  04C6  0008               	return
  2694  04C7                     __end_of_e2pext_r:
  2695                           
  2696                           	psect	text11
  2697  0553                     __ptext11:	
  2698 ;; *************** function _i2c_wb *****************
  2699 ;; Defined at:
  2700 ;;		line 69 in file "i2c.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  val             1    wreg     unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  val             1    2[COMMON] unsigned char 
  2705 ;;  i               1    3[COMMON] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         0       0       0       0       0
  2716 ;;      Locals:         2       0       0       0       0
  2717 ;;      Temps:          2       0       0       0       0
  2718 ;;      Totals:         4       0       0       0       0
  2719 ;;Total ram usage:        4 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    1
  2722 ;; This function calls:
  2723 ;;		_delay
  2724 ;; This function is called by:
  2725 ;;		_e2pext_r
  2726 ;;		_e2pext_w
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _i2c_wb
  2732  0553                     _i2c_wb:
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in _i2c_wb: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2736                           ;i2c_wb@val stored from wreg
  2737  0553  00F2               	movwf	i2c_wb@val
  2738  0554                     i1l1457:
  2739                           
  2740                           ;i2c.c: 71: unsigned char i;;i2c.c: 72: PORTCbits.RC3=0;
  2741  0554  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0555  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0556  1187               	bcf	7,3	;volatile
  2744  0557                     i1l1459:
  2745                           
  2746                           ;i2c.c: 73: for(i=0;i<8;i++)
  2747  0557  01F3               	clrf	i2c_wb@i
  2748  0558                     i1l1465:
  2749                           
  2750                           ;i2c.c: 74: {;i2c.c: 75: PORTCbits.RC4=((val>>(7-i))& 0x01);
  2751  0558  0872               	movf	i2c_wb@val,w
  2752  0559  00F0               	movwf	??_i2c_wb
  2753  055A  0873               	movf	i2c_wb@i,w
  2754  055B  3C07               	sublw	7
  2755  055C  3E01               	addlw	1
  2756  055D  2D60               	goto	u81_24
  2757  055E                     u81_25:
  2758  055E  1003               	clrc
  2759  055F  0CF0               	rrf	??_i2c_wb,f
  2760  0560                     u81_24:
  2761  0560  3EFF               	addlw	-1
  2762  0561  1D03               	skipz
  2763  0562  2D5E               	goto	u81_25
  2764  0563  0870               	movf	??_i2c_wb,w
  2765  0564  3901               	andlw	1
  2766  0565  00F1               	movwf	??_i2c_wb+1
  2767  0566  0EF1               	swapf	??_i2c_wb+1,f
  2768  0567  0807               	movf	7,w	;volatile
  2769  0568  0671               	xorwf	??_i2c_wb+1,w
  2770  0569  39EF               	andlw	-17
  2771  056A  0671               	xorwf	??_i2c_wb+1,w
  2772  056B  0087               	movwf	7	;volatile
  2773  056C                     i1l1467:
  2774                           
  2775                           ;i2c.c: 76: PORTCbits.RC3=1;
  2776  056C  1587               	bsf	7,3	;volatile
  2777  056D                     i1l1469:
  2778                           
  2779                           ;i2c.c: 77: delay();
  2780  056D  120A  118A  2613  120A  118A  	fcall	_delay
  2781  0572                     i1l1471:
  2782                           
  2783                           ;i2c.c: 78: PORTCbits.RC3=0;
  2784  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0574  1187               	bcf	7,3	;volatile
  2787  0575                     i1l1473:
  2788  0575  3001               	movlw	1
  2789  0576  00FF               	movwf	btemp+1
  2790  0577  087F               	movf	btemp+1,w
  2791  0578  07F3               	addwf	i2c_wb@i,f
  2792  0579                     i1l1475:
  2793  0579  3008               	movlw	8
  2794  057A  0273               	subwf	i2c_wb@i,w
  2795  057B  1C03               	skipc
  2796  057C  2D7E               	goto	u82_21
  2797  057D  2D7F               	goto	u82_20
  2798  057E                     u82_21:
  2799  057E  2D58               	goto	i1l1465
  2800  057F                     u82_20:
  2801  057F                     i1l90:
  2802                           
  2803                           ;i2c.c: 79: };i2c.c: 80: PORTCbits.RC4=1;
  2804  057F  1607               	bsf	7,4	;volatile
  2805  0580                     i1l1477:
  2806                           
  2807                           ;i2c.c: 81: delay();
  2808  0580  120A  118A  2613  120A  118A  	fcall	_delay
  2809  0585                     i1l1479:
  2810                           
  2811                           ;i2c.c: 82: PORTCbits.RC3=1;
  2812  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2813  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0587  1587               	bsf	7,3	;volatile
  2815                           
  2816                           ;i2c.c: 83: delay();
  2817  0588  120A  118A  2613  120A  118A  	fcall	_delay
  2818  058D                     i1l1481:
  2819                           
  2820                           ;i2c.c: 84: PORTCbits.RC3=0;
  2821  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2822  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2823  058F  1187               	bcf	7,3	;volatile
  2824  0590                     i1l91:
  2825  0590  0008               	return
  2826  0591                     __end_of_i2c_wb:
  2827                           
  2828                           	psect	text12
  2829  05B9                     __ptext12:	
  2830 ;; *************** function _i2c_stop *****************
  2831 ;; Defined at:
  2832 ;;		line 60 in file "i2c.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    1
  2853 ;; This function calls:
  2854 ;;		_delay
  2855 ;; This function is called by:
  2856 ;;		_e2pext_r
  2857 ;;		_e2pext_w
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           
  2862                           ;psect for function _i2c_stop
  2863  05B9                     _i2c_stop:
  2864  05B9                     i1l1519:	
  2865                           ;incstack = 0
  2866                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  2867                           
  2868                           
  2869                           ;i2c.c: 62: PORTCbits.RC3=1;
  2870  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2871  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2872  05BB  1587               	bsf	7,3	;volatile
  2873                           
  2874                           ;i2c.c: 63: PORTCbits.RC4=0;
  2875  05BC  1207               	bcf	7,4	;volatile
  2876  05BD                     i1l1521:
  2877                           
  2878                           ;i2c.c: 64: delay();
  2879  05BD  120A  118A  2613  120A  118A  	fcall	_delay
  2880  05C2                     i1l1523:
  2881                           
  2882                           ;i2c.c: 65: PORTCbits.RC4=1;
  2883  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2884  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2885  05C4  1607               	bsf	7,4	;volatile
  2886                           
  2887                           ;i2c.c: 66: delay();
  2888  05C5  120A  118A  2613  120A  118A  	fcall	_delay
  2889  05CA                     i1l86:
  2890  05CA  0008               	return
  2891  05CB                     __end_of_i2c_stop:
  2892                           
  2893                           	psect	text13
  2894  05CB                     __ptext13:	
  2895 ;; *************** function _i2c_start *****************
  2896 ;; Defined at:
  2897 ;;		line 51 in file "i2c.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    1
  2918 ;; This function calls:
  2919 ;;		_delay
  2920 ;; This function is called by:
  2921 ;;		_e2pext_r
  2922 ;;		_e2pext_w
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _i2c_start
  2928  05CB                     _i2c_start:
  2929  05CB                     i1l1451:	
  2930                           ;incstack = 0
  2931                           ; Regs used in _i2c_start: [status,2+status,0+pclath+cstack]
  2932                           
  2933                           
  2934                           ;i2c.c: 53: PORTCbits.RC3=1;
  2935  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2936  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2937  05CD  1587               	bsf	7,3	;volatile
  2938                           
  2939                           ;i2c.c: 54: PORTCbits.RC4=1;
  2940  05CE  1607               	bsf	7,4	;volatile
  2941  05CF                     i1l1453:
  2942                           
  2943                           ;i2c.c: 55: delay();
  2944  05CF  120A  118A  2613  120A  118A  	fcall	_delay
  2945  05D4                     i1l1455:
  2946                           
  2947                           ;i2c.c: 56: PORTCbits.RC4=0;
  2948  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2949  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2950  05D6  1207               	bcf	7,4	;volatile
  2951                           
  2952                           ;i2c.c: 57: delay();
  2953  05D7  120A  118A  2613  120A  118A  	fcall	_delay
  2954  05DC                     i1l83:
  2955  05DC  0008               	return
  2956  05DD                     __end_of_i2c_start:
  2957                           
  2958                           	psect	text14
  2959  042A                     __ptext14:	
  2960 ;; *************** function _i2c_rb *****************
  2961 ;; Defined at:
  2962 ;;		line 87 in file "i2c.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  ack             1    wreg     unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  ack             1    1[COMMON] unsigned char 
  2967 ;;  i               1    3[COMMON] unsigned char 
  2968 ;;  ret             1    2[COMMON] unsigned char 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      unsigned char 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         3       0       0       0       0
  2980 ;;      Temps:          1       0       0       0       0
  2981 ;;      Totals:         4       0       0       0       0
  2982 ;;Total ram usage:        4 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    1
  2985 ;; This function calls:
  2986 ;;		_delay
  2987 ;; This function is called by:
  2988 ;;		_e2pext_r
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _i2c_rb
  2994  042A                     _i2c_rb:
  2995                           
  2996                           ;incstack = 0
  2997                           ; Regs used in _i2c_rb: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2998                           ;i2c_rb@ack stored from wreg
  2999  042A  00F1               	movwf	i2c_rb@ack
  3000  042B                     i1l1483:
  3001                           
  3002                           ;i2c.c: 89: char i;;i2c.c: 90: unsigned char ret=0;
  3003  042B  01F2               	clrf	i2c_rb@ret
  3004  042C                     i1l1485:
  3005                           
  3006                           ;i2c.c: 92: PORTCbits.RC3=0;
  3007  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3008  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3009  042E  1187               	bcf	7,3	;volatile
  3010  042F                     i1l1487:
  3011                           
  3012                           ;i2c.c: 93: TRISCbits.TRISC4=1;
  3013  042F  1683               	bsf	3,5	;RP0=1, select bank1
  3014  0430  1303               	bcf	3,6	;RP1=0, select bank1
  3015  0431  1607               	bsf	7,4	;volatile
  3016  0432                     i1l1489:
  3017                           
  3018                           ;i2c.c: 94: PORTCbits.RC4=1;
  3019  0432  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0433  1303               	bcf	3,6	;RP1=0, select bank0
  3021  0434  1607               	bsf	7,4	;volatile
  3022                           
  3023                           ;i2c.c: 95: for(i=0;i<8;i++)
  3024  0435  01F3               	clrf	i2c_rb@i
  3025  0436                     i1l94:
  3026                           
  3027                           ;i2c.c: 96: {;i2c.c: 97: PORTCbits.RC3=1;
  3028  0436  1587               	bsf	7,3	;volatile
  3029  0437                     i1l1495:
  3030                           
  3031                           ;i2c.c: 98: delay();
  3032  0437  120A  118A  2613  120A  118A  	fcall	_delay
  3033  043C                     i1l1497:
  3034                           
  3035                           ;i2c.c: 99: ret|=(PORTCbits.RC4<<(7-i));
  3036  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3037  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3038  043E  0E07               	swapf	7,w	;volatile
  3039  043F  3901               	andlw	1
  3040  0440  00F0               	movwf	??_i2c_rb
  3041  0441  0873               	movf	i2c_rb@i,w
  3042  0442  3C07               	sublw	7
  3043  0443  3E01               	addlw	1
  3044  0444  2C47               	goto	u83_24
  3045  0445                     u83_25:
  3046  0445  1003               	clrc
  3047  0446  0DF0               	rlf	??_i2c_rb,f
  3048  0447                     u83_24:
  3049  0447  3EFF               	addlw	-1
  3050  0448  1D03               	skipz
  3051  0449  2C45               	goto	u83_25
  3052  044A  0870               	movf	??_i2c_rb,w
  3053  044B  00FF               	movwf	btemp+1
  3054  044C  087F               	movf	btemp+1,w
  3055  044D  04F2               	iorwf	i2c_rb@ret,f
  3056  044E                     i1l1499:
  3057                           
  3058                           ;i2c.c: 100: PORTCbits.RC3=0;
  3059  044E  1187               	bcf	7,3	;volatile
  3060  044F                     i1l1501:
  3061  044F  3001               	movlw	1
  3062  0450  00FF               	movwf	btemp+1
  3063  0451  087F               	movf	btemp+1,w
  3064  0452  07F3               	addwf	i2c_rb@i,f
  3065  0453                     i1l1503:
  3066  0453  3008               	movlw	8
  3067  0454  0273               	subwf	i2c_rb@i,w
  3068  0455  1C03               	skipc
  3069  0456  2C58               	goto	u84_21
  3070  0457  2C59               	goto	u84_20
  3071  0458                     u84_21:
  3072  0458  2C36               	goto	i1l94
  3073  0459                     u84_20:
  3074  0459                     i1l95:
  3075                           
  3076                           ;i2c.c: 101: };i2c.c: 102: TRISCbits.TRISC4=0;
  3077  0459  1683               	bsf	3,5	;RP0=1, select bank1
  3078  045A  1303               	bcf	3,6	;RP1=0, select bank1
  3079  045B  1207               	bcf	7,4	;volatile
  3080  045C                     i1l1505:
  3081                           
  3082                           ;i2c.c: 103: if(ack)
  3083  045C  0871               	movf	i2c_rb@ack,w
  3084  045D  1903               	btfsc	3,2
  3085  045E  2C60               	goto	u85_21
  3086  045F  2C61               	goto	u85_20
  3087  0460                     u85_21:
  3088  0460  2C65               	goto	i1l96
  3089  0461                     u85_20:
  3090  0461                     i1l1507:
  3091                           
  3092                           ;i2c.c: 104: PORTCbits.RC4=0;
  3093  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0463  1207               	bcf	7,4	;volatile
  3096  0464  2C68               	goto	i1l1509
  3097  0465                     i1l96:
  3098                           
  3099                           ;i2c.c: 105: else;i2c.c: 106: PORTCbits.RC4=1;
  3100  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0467  1607               	bsf	7,4	;volatile
  3103  0468                     i1l1509:
  3104                           
  3105                           ;i2c.c: 107: delay();
  3106  0468  120A  118A  2613  120A  118A  	fcall	_delay
  3107  046D                     i1l1511:
  3108                           
  3109                           ;i2c.c: 108: PORTCbits.RC3=1;
  3110  046D  1283               	bcf	3,5	;RP0=0, select bank0
  3111  046E  1303               	bcf	3,6	;RP1=0, select bank0
  3112  046F  1587               	bsf	7,3	;volatile
  3113                           
  3114                           ;i2c.c: 109: delay();
  3115  0470  120A  118A  2613  120A  118A  	fcall	_delay
  3116  0475                     i1l1513:
  3117                           
  3118                           ;i2c.c: 110: PORTCbits.RC3=0;
  3119  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0477  1187               	bcf	7,3	;volatile
  3122  0478                     i1l1515:
  3123                           
  3124                           ;i2c.c: 112: return ret;
  3125  0478  0872               	movf	i2c_rb@ret,w
  3126  0479                     i1l98:
  3127  0479  0008               	return
  3128  047A                     __end_of_i2c_rb:
  3129                           
  3130                           	psect	text15
  3131  0613                     __ptext15:	
  3132 ;; *************** function _delay *****************
  3133 ;; Defined at:
  3134 ;;		line 30 in file "i2c.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		None
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_i2c_start
  3158 ;;		_i2c_stop
  3159 ;;		_i2c_wb
  3160 ;;		_i2c_rb
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _delay
  3166  0613                     _delay:
  3167  0613                     i1l1449:	
  3168                           ;incstack = 0
  3169                           ; Regs used in _delay: []
  3170                           
  3171  0613  0000               	nop	;# 
  3172  0614  0000               	nop	;# 
  3173  0615  0000               	nop	;# 
  3174  0616  0000               	nop	;# 
  3175  0617  0000               	nop	;# 
  3176  0618  0000               	nop	;# 
  3177  0619  0000               	nop	;# 
  3178  061A  0000               	nop	;# 
  3179  061B                     i1l77:
  3180  061B  0008               	return
  3181  061C                     __end_of_delay:
  3182                           
  3183                           	psect	text16
  3184  03D3                     __ptext16:	
  3185 ;; *************** function _display7s *****************
  3186 ;; Defined at:
  3187 ;;		line 35 in file "display7s.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  v               1    wreg     unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  v               1    0[COMMON] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      unsigned char 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       0       0       0
  3202 ;;      Locals:         1       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0
  3204 ;;      Totals:         1       0       0       0       0
  3205 ;;Total ram usage:        1 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_ISR
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           
  3215                           ;psect for function _display7s
  3216  03D3                     _display7s:
  3217                           
  3218                           ;incstack = 0
  3219                           ; Regs used in _display7s: [wreg-fsr0h+status,2+status,0]
  3220                           ;display7s@v stored from wreg
  3221  03D3  00F0               	movwf	display7s@v
  3222  03D4                     i1l1569:
  3223                           
  3224                           ;display7s.c: 37: switch(v)
  3225  03D4  2BF7               	goto	i1l1641
  3226  03D5                     i1l1571:
  3227                           
  3228                           ;display7s.c: 40: return 0x3F;
  3229  03D5  303F               	movlw	63
  3230  03D6  2C29               	goto	i1l29
  3231  03D7                     i1l1575:
  3232                           
  3233                           ;display7s.c: 42: return 0x06;
  3234  03D7  3006               	movlw	6
  3235  03D8  2C29               	goto	i1l29
  3236  03D9                     i1l1579:
  3237                           
  3238                           ;display7s.c: 44: return 0x5B;
  3239  03D9  305B               	movlw	91
  3240  03DA  2C29               	goto	i1l29
  3241  03DB                     i1l1583:
  3242                           
  3243                           ;display7s.c: 46: return 0x4F;
  3244  03DB  304F               	movlw	79
  3245  03DC  2C29               	goto	i1l29
  3246  03DD                     i1l1587:
  3247                           
  3248                           ;display7s.c: 48: return 0x66;
  3249  03DD  3066               	movlw	102
  3250  03DE  2C29               	goto	i1l29
  3251  03DF                     i1l1591:
  3252                           
  3253                           ;display7s.c: 50: return 0x6D;
  3254  03DF  306D               	movlw	109
  3255  03E0  2C29               	goto	i1l29
  3256  03E1                     i1l1595:
  3257                           
  3258                           ;display7s.c: 52: return 0x7D;
  3259  03E1  307D               	movlw	125
  3260  03E2  2C29               	goto	i1l29
  3261  03E3                     i1l1599:
  3262                           
  3263                           ;display7s.c: 54: return 0x07;
  3264  03E3  3007               	movlw	7
  3265  03E4  2C29               	goto	i1l29
  3266  03E5                     i1l1603:
  3267                           
  3268                           ;display7s.c: 56: return 0x7F;
  3269  03E5  307F               	movlw	127
  3270  03E6  2C29               	goto	i1l29
  3271  03E7                     i1l1607:
  3272                           
  3273                           ;display7s.c: 58: return 0x6F;
  3274  03E7  306F               	movlw	111
  3275  03E8  2C29               	goto	i1l29
  3276  03E9                     i1l1611:
  3277                           
  3278                           ;display7s.c: 60: return 0x77;
  3279  03E9  3077               	movlw	119
  3280  03EA  2C29               	goto	i1l29
  3281  03EB                     i1l1615:
  3282                           
  3283                           ;display7s.c: 62: return 0x7c;
  3284  03EB  307C               	movlw	124
  3285  03EC  2C29               	goto	i1l29
  3286  03ED                     i1l1619:
  3287                           
  3288                           ;display7s.c: 64: return 0x58;
  3289  03ED  3058               	movlw	88
  3290  03EE  2C29               	goto	i1l29
  3291  03EF                     i1l1623:
  3292                           
  3293                           ;display7s.c: 66: return 0x5E;
  3294  03EF  305E               	movlw	94
  3295  03F0  2C29               	goto	i1l29
  3296  03F1                     i1l1627:
  3297                           
  3298                           ;display7s.c: 68: return 0x79;
  3299  03F1  3079               	movlw	121
  3300  03F2  2C29               	goto	i1l29
  3301  03F3                     i1l1631:
  3302                           
  3303                           ;display7s.c: 70: return 0x71;
  3304  03F3  3071               	movlw	113
  3305  03F4  2C29               	goto	i1l29
  3306  03F5                     i1l1635:
  3307                           
  3308                           ;display7s.c: 72: return 0;
  3309  03F5  3000               	movlw	0
  3310  03F6  2C29               	goto	i1l29
  3311  03F7                     i1l1641:
  3312  03F7  0870               	movf	display7s@v,w
  3313                           
  3314                           ; Switch size 1, requested type "simple"
  3315                           ; Number of cases is 16, Range of values is 0 to 15
  3316                           ; switch strategies available:
  3317                           ; Name         Instructions Cycles
  3318                           ; simple_byte           49    25 (average)
  3319                           ; direct_byte           56     8 (fixed)
  3320                           ; jumptable            260     6 (fixed)
  3321                           ;	Chosen strategy is simple_byte
  3322  03F8  3A00               	xorlw	0	; case 0
  3323  03F9  1903               	skipnz
  3324  03FA  2BD5               	goto	i1l1571
  3325  03FB  3A01               	xorlw	1	; case 1
  3326  03FC  1903               	skipnz
  3327  03FD  2BD7               	goto	i1l1575
  3328  03FE  3A03               	xorlw	3	; case 2
  3329  03FF  1903               	skipnz
  3330  0400  2BD9               	goto	i1l1579
  3331  0401  3A01               	xorlw	1	; case 3
  3332  0402  1903               	skipnz
  3333  0403  2BDB               	goto	i1l1583
  3334  0404  3A07               	xorlw	7	; case 4
  3335  0405  1903               	skipnz
  3336  0406  2BDD               	goto	i1l1587
  3337  0407  3A01               	xorlw	1	; case 5
  3338  0408  1903               	skipnz
  3339  0409  2BDF               	goto	i1l1591
  3340  040A  3A03               	xorlw	3	; case 6
  3341  040B  1903               	skipnz
  3342  040C  2BE1               	goto	i1l1595
  3343  040D  3A01               	xorlw	1	; case 7
  3344  040E  1903               	skipnz
  3345  040F  2BE3               	goto	i1l1599
  3346  0410  3A0F               	xorlw	15	; case 8
  3347  0411  1903               	skipnz
  3348  0412  2BE5               	goto	i1l1603
  3349  0413  3A01               	xorlw	1	; case 9
  3350  0414  1903               	skipnz
  3351  0415  2BE7               	goto	i1l1607
  3352  0416  3A03               	xorlw	3	; case 10
  3353  0417  1903               	skipnz
  3354  0418  2BE9               	goto	i1l1611
  3355  0419  3A01               	xorlw	1	; case 11
  3356  041A  1903               	skipnz
  3357  041B  2BEB               	goto	i1l1615
  3358  041C  3A07               	xorlw	7	; case 12
  3359  041D  1903               	skipnz
  3360  041E  2BED               	goto	i1l1619
  3361  041F  3A01               	xorlw	1	; case 13
  3362  0420  1903               	skipnz
  3363  0421  2BEF               	goto	i1l1623
  3364  0422  3A03               	xorlw	3	; case 14
  3365  0423  1903               	skipnz
  3366  0424  2BF1               	goto	i1l1627
  3367  0425  3A01               	xorlw	1	; case 15
  3368  0426  1903               	skipnz
  3369  0427  2BF3               	goto	i1l1631
  3370  0428  2BF5               	goto	i1l1635
  3371  0429                     i1l29:
  3372  0429  0008               	return
  3373  042A                     __end_of_display7s:
  3374                           
  3375                           	psect	text17
  3376  050D                     __ptext17:	
  3377 ;; *************** function _adc_amostra *****************
  3378 ;; Defined at:
  3379 ;;		line 44 in file "adc.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  canal           1    wreg     unsigned char 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  canal           1    9[COMMON] unsigned char 
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  2    0[COMMON] unsigned int 
  3386 ;; Registers used:
  3387 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3393 ;;      Params:         2       0       0       0       0
  3394 ;;      Locals:         1       0       0       0       0
  3395 ;;      Temps:          7       0       0       0       0
  3396 ;;      Totals:        10       0       0       0       0
  3397 ;;Total ram usage:       10 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_ISR
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function _adc_amostra
  3408  050D                     _adc_amostra:
  3409                           
  3410                           ;incstack = 0
  3411                           ; Regs used in _adc_amostra: [wreg-fsr0h+status,2+status,0]
  3412                           ;adc_amostra@canal stored from wreg
  3413  050D  00F9               	movwf	adc_amostra@canal
  3414  050E                     i1l1553:
  3415                           
  3416                           ;adc.c: 62: switch(canal)
  3417  050E  2D1E               	goto	i1l1563
  3418  050F                     i1l1555:
  3419                           
  3420                           ;adc.c: 65: ADCON0=0x01;
  3421  050F  3001               	movlw	1
  3422  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0511  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0512  009F               	movwf	31	;volatile
  3425                           
  3426                           ;adc.c: 66: break;
  3427  0513  2D29               	goto	i1l18
  3428  0514                     i1l1557:
  3429                           
  3430                           ;adc.c: 68: ADCON0=0x09;
  3431  0514  3009               	movlw	9
  3432  0515  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0516  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0517  009F               	movwf	31	;volatile
  3435                           
  3436                           ;adc.c: 69: break;
  3437  0518  2D29               	goto	i1l18
  3438  0519                     i1l1559:
  3439                           
  3440                           ;adc.c: 71: ADCON0=0x11;
  3441  0519  3011               	movlw	17
  3442  051A  1283               	bcf	3,5	;RP0=0, select bank0
  3443  051B  1303               	bcf	3,6	;RP1=0, select bank0
  3444  051C  009F               	movwf	31	;volatile
  3445                           
  3446                           ;adc.c: 72: break;
  3447  051D  2D29               	goto	i1l18
  3448  051E                     i1l1563:
  3449  051E  0879               	movf	adc_amostra@canal,w
  3450                           
  3451                           ; Switch size 1, requested type "simple"
  3452                           ; Number of cases is 3, Range of values is 0 to 2
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte           10     6 (average)
  3456                           ; direct_byte           17     8 (fixed)
  3457                           ; jumptable            260     6 (fixed)
  3458                           ;	Chosen strategy is simple_byte
  3459  051F  3A00               	xorlw	0	; case 0
  3460  0520  1903               	skipnz
  3461  0521  2D0F               	goto	i1l1555
  3462  0522  3A01               	xorlw	1	; case 1
  3463  0523  1903               	skipnz
  3464  0524  2D14               	goto	i1l1557
  3465  0525  3A03               	xorlw	3	; case 2
  3466  0526  1903               	skipnz
  3467  0527  2D19               	goto	i1l1559
  3468  0528  2D29               	goto	i1l18
  3469  0529                     i1l18:
  3470                           
  3471                           ;adc.c: 77: ADCON0bits.GO=1;
  3472  0529  1283               	bcf	3,5	;RP0=0, select bank0
  3473  052A  1303               	bcf	3,6	;RP1=0, select bank0
  3474  052B  151F               	bsf	31,2	;volatile
  3475  052C                     i1l21:	
  3476                           ;adc.c: 78: while(ADCON0bits.GO == 1);
  3477                           
  3478  052C  191F               	btfsc	31,2	;volatile
  3479  052D  2D2F               	goto	u88_21
  3480  052E  2D30               	goto	u88_20
  3481  052F                     u88_21:
  3482  052F  2D2C               	goto	i1l21
  3483  0530                     u88_20:
  3484  0530                     i1l1565:
  3485                           
  3486                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  3487  0530  1683               	bsf	3,5	;RP0=1, select bank1
  3488  0531  1303               	bcf	3,6	;RP1=0, select bank1
  3489  0532  081E               	movf	30,w	;volatile
  3490  0533  00F2               	movwf	??_adc_amostra
  3491  0534  3006               	movlw	6
  3492  0535                     u89_25:
  3493  0535  1003               	clrc
  3494  0536  0CF2               	rrf	??_adc_amostra,f
  3495  0537  3EFF               	addlw	-1
  3496  0538  1D03               	skipz
  3497  0539  2D35               	goto	u89_25
  3498  053A  0872               	movf	??_adc_amostra,w
  3499  053B  00F3               	movwf	??_adc_amostra+1
  3500  053C  01F4               	clrf	??_adc_amostra+2
  3501  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3502  053E  1303               	bcf	3,6	;RP1=0, select bank0
  3503  053F  081E               	movf	30,w	;volatile
  3504  0540  00F5               	movwf	??_adc_amostra+3
  3505  0541  01F6               	clrf	??_adc_amostra+4
  3506  0542  1003               	clrc
  3507  0543  0DF5               	rlf	??_adc_amostra+3,f
  3508  0544  0DF6               	rlf	??_adc_amostra+4,f
  3509  0545  1003               	clrc
  3510  0546  0DF5               	rlf	??_adc_amostra+3,f
  3511  0547  0DF6               	rlf	??_adc_amostra+4,f
  3512  0548  0873               	movf	??_adc_amostra+1,w
  3513  0549  0475               	iorwf	??_adc_amostra+3,w
  3514  054A  00F7               	movwf	??_adc_amostra+5
  3515  054B  0874               	movf	??_adc_amostra+2,w
  3516  054C  0476               	iorwf	??_adc_amostra+4,w
  3517  054D  00F8               	movwf	??_adc_amostra+6
  3518  054E  0877               	movf	??_adc_amostra+5,w
  3519  054F  00F0               	movwf	?_adc_amostra
  3520  0550  0878               	movf	??_adc_amostra+6,w
  3521  0551  00F1               	movwf	?_adc_amostra+1
  3522  0552                     i1l24:
  3523  0552  0008               	return
  3524  0553                     __end_of_adc_amostra:
  3525                           
  3526                           	psect	text18
  3527  037A                     __ptext18:	
  3528 ;; *************** function ___awmod *****************
  3529 ;; Defined at:
  3530 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  divisor         2    0[COMMON] int 
  3533 ;;  dividend        2    2[COMMON] int 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  sign            1    5[COMMON] unsigned char 
  3536 ;;  counter         1    4[COMMON] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  2    0[COMMON] int 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, btemp+1
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3546 ;;      Params:         4       0       0       0       0
  3547 ;;      Locals:         2       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0
  3549 ;;      Totals:         6       0       0       0       0
  3550 ;;Total ram usage:        6 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_ISR
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function ___awmod
  3561  037A                     ___awmod:
  3562  037A                     i1l1743:	
  3563                           ;incstack = 0
  3564                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3565                           
  3566  037A  01F5               	clrf	___awmod@sign
  3567  037B                     i1l1745:
  3568  037B  1FF3               	btfss	___awmod@dividend+1,7
  3569  037C  2B7E               	goto	u103_21
  3570  037D  2B7F               	goto	u103_20
  3571  037E                     u103_21:
  3572  037E  2B86               	goto	i1l1751
  3573  037F                     u103_20:
  3574  037F                     i1l1747:
  3575  037F  09F2               	comf	___awmod@dividend,f
  3576  0380  09F3               	comf	___awmod@dividend+1,f
  3577  0381  0AF2               	incf	___awmod@dividend,f
  3578  0382  1903               	skipnz
  3579  0383  0AF3               	incf	___awmod@dividend+1,f
  3580  0384                     i1l1749:
  3581  0384  01F5               	clrf	___awmod@sign
  3582  0385  0AF5               	incf	___awmod@sign,f
  3583  0386                     i1l1751:
  3584  0386  1FF1               	btfss	___awmod@divisor+1,7
  3585  0387  2B89               	goto	u104_21
  3586  0388  2B8A               	goto	u104_20
  3587  0389                     u104_21:
  3588  0389  2B8F               	goto	i1l1755
  3589  038A                     u104_20:
  3590  038A                     i1l1753:
  3591  038A  09F0               	comf	___awmod@divisor,f
  3592  038B  09F1               	comf	___awmod@divisor+1,f
  3593  038C  0AF0               	incf	___awmod@divisor,f
  3594  038D  1903               	skipnz
  3595  038E  0AF1               	incf	___awmod@divisor+1,f
  3596  038F                     i1l1755:
  3597  038F  0870               	movf	___awmod@divisor,w
  3598  0390  0471               	iorwf	___awmod@divisor+1,w
  3599  0391  1903               	btfsc	3,2
  3600  0392  2B94               	goto	u105_21
  3601  0393  2B95               	goto	u105_20
  3602  0394                     u105_21:
  3603  0394  2BC4               	goto	i1l1773
  3604  0395                     u105_20:
  3605  0395                     i1l1757:
  3606  0395  01F4               	clrf	___awmod@counter
  3607  0396  0AF4               	incf	___awmod@counter,f
  3608  0397  2BA3               	goto	i1l1763
  3609  0398                     i1l1759:
  3610  0398  3001               	movlw	1
  3611  0399                     u106_25:
  3612  0399  1003               	clrc
  3613  039A  0DF0               	rlf	___awmod@divisor,f
  3614  039B  0DF1               	rlf	___awmod@divisor+1,f
  3615  039C  3EFF               	addlw	-1
  3616  039D  1D03               	skipz
  3617  039E  2B99               	goto	u106_25
  3618  039F                     i1l1761:
  3619  039F  3001               	movlw	1
  3620  03A0  00FF               	movwf	btemp+1
  3621  03A1  087F               	movf	btemp+1,w
  3622  03A2  07F4               	addwf	___awmod@counter,f
  3623  03A3                     i1l1763:
  3624  03A3  1FF1               	btfss	___awmod@divisor+1,7
  3625  03A4  2BA6               	goto	u107_21
  3626  03A5  2BA7               	goto	u107_20
  3627  03A6                     u107_21:
  3628  03A6  2B98               	goto	i1l1759
  3629  03A7                     u107_20:
  3630  03A7                     i1l1765:
  3631  03A7  0871               	movf	___awmod@divisor+1,w
  3632  03A8  0273               	subwf	___awmod@dividend+1,w
  3633  03A9  1D03               	skipz
  3634  03AA  2BAD               	goto	u108_25
  3635  03AB  0870               	movf	___awmod@divisor,w
  3636  03AC  0272               	subwf	___awmod@dividend,w
  3637  03AD                     u108_25:
  3638  03AD  1C03               	skipc
  3639  03AE  2BB0               	goto	u108_21
  3640  03AF  2BB1               	goto	u108_20
  3641  03B0                     u108_21:
  3642  03B0  2BB7               	goto	i1l1769
  3643  03B1                     u108_20:
  3644  03B1                     i1l1767:
  3645  03B1  0870               	movf	___awmod@divisor,w
  3646  03B2  02F2               	subwf	___awmod@dividend,f
  3647  03B3  0871               	movf	___awmod@divisor+1,w
  3648  03B4  1C03               	skipc
  3649  03B5  03F3               	decf	___awmod@dividend+1,f
  3650  03B6  02F3               	subwf	___awmod@dividend+1,f
  3651  03B7                     i1l1769:
  3652  03B7  3001               	movlw	1
  3653  03B8                     u109_25:
  3654  03B8  1003               	clrc
  3655  03B9  0CF1               	rrf	___awmod@divisor+1,f
  3656  03BA  0CF0               	rrf	___awmod@divisor,f
  3657  03BB  3EFF               	addlw	-1
  3658  03BC  1D03               	skipz
  3659  03BD  2BB8               	goto	u109_25
  3660  03BE                     i1l1771:
  3661  03BE  3001               	movlw	1
  3662  03BF  02F4               	subwf	___awmod@counter,f
  3663  03C0  1D03               	btfss	3,2
  3664  03C1  2BC3               	goto	u110_21
  3665  03C2  2BC4               	goto	u110_20
  3666  03C3                     u110_21:
  3667  03C3  2BA7               	goto	i1l1765
  3668  03C4                     u110_20:
  3669  03C4                     i1l1773:
  3670  03C4  0875               	movf	___awmod@sign,w
  3671  03C5  1903               	btfsc	3,2
  3672  03C6  2BC8               	goto	u111_21
  3673  03C7  2BC9               	goto	u111_20
  3674  03C8                     u111_21:
  3675  03C8  2BCE               	goto	i1l1777
  3676  03C9                     u111_20:
  3677  03C9                     i1l1775:
  3678  03C9  09F2               	comf	___awmod@dividend,f
  3679  03CA  09F3               	comf	___awmod@dividend+1,f
  3680  03CB  0AF2               	incf	___awmod@dividend,f
  3681  03CC  1903               	skipnz
  3682  03CD  0AF3               	incf	___awmod@dividend+1,f
  3683  03CE                     i1l1777:
  3684  03CE  0873               	movf	___awmod@dividend+1,w
  3685  03CF  00F1               	movwf	?___awmod+1
  3686  03D0  0872               	movf	___awmod@dividend,w
  3687  03D1  00F0               	movwf	?___awmod
  3688  03D2                     i1l537:
  3689  03D2  0008               	return
  3690  03D3                     __end_of___awmod:
  3691                           
  3692                           	psect	text19
  3693  02AE                     __ptext19:	
  3694 ;; *************** function ___awdiv *****************
  3695 ;; Defined at:
  3696 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  divisor         2    0[COMMON] int 
  3699 ;;  dividend        2    2[COMMON] int 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  quotient        2    6[COMMON] int 
  3702 ;;  sign            1    5[COMMON] unsigned char 
  3703 ;;  counter         1    4[COMMON] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  2    0[COMMON] int 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0, btemp+1
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         4       0       0       0       0
  3714 ;;      Locals:         4       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0
  3716 ;;      Totals:         8       0       0       0       0
  3717 ;;Total ram usage:        8 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_ISR
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function ___awdiv
  3728  02AE                     ___awdiv:
  3729  02AE                     i1l1699:	
  3730                           ;incstack = 0
  3731                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3732                           
  3733  02AE  01F5               	clrf	___awdiv@sign
  3734  02AF                     i1l1701:
  3735  02AF  1FF1               	btfss	___awdiv@divisor+1,7
  3736  02B0  2AB2               	goto	u93_21
  3737  02B1  2AB3               	goto	u93_20
  3738  02B2                     u93_21:
  3739  02B2  2ABA               	goto	i1l1707
  3740  02B3                     u93_20:
  3741  02B3                     i1l1703:
  3742  02B3  09F0               	comf	___awdiv@divisor,f
  3743  02B4  09F1               	comf	___awdiv@divisor+1,f
  3744  02B5  0AF0               	incf	___awdiv@divisor,f
  3745  02B6  1903               	skipnz
  3746  02B7  0AF1               	incf	___awdiv@divisor+1,f
  3747  02B8                     i1l1705:
  3748  02B8  01F5               	clrf	___awdiv@sign
  3749  02B9  0AF5               	incf	___awdiv@sign,f
  3750  02BA                     i1l1707:
  3751  02BA  1FF3               	btfss	___awdiv@dividend+1,7
  3752  02BB  2ABD               	goto	u94_21
  3753  02BC  2ABE               	goto	u94_20
  3754  02BD                     u94_21:
  3755  02BD  2AC7               	goto	i1l1713
  3756  02BE                     u94_20:
  3757  02BE                     i1l1709:
  3758  02BE  09F2               	comf	___awdiv@dividend,f
  3759  02BF  09F3               	comf	___awdiv@dividend+1,f
  3760  02C0  0AF2               	incf	___awdiv@dividend,f
  3761  02C1  1903               	skipnz
  3762  02C2  0AF3               	incf	___awdiv@dividend+1,f
  3763  02C3                     i1l1711:
  3764  02C3  3001               	movlw	1
  3765  02C4  00FF               	movwf	btemp+1
  3766  02C5  087F               	movf	btemp+1,w
  3767  02C6  06F5               	xorwf	___awdiv@sign,f
  3768  02C7                     i1l1713:
  3769  02C7  01F6               	clrf	___awdiv@quotient
  3770  02C8  01F7               	clrf	___awdiv@quotient+1
  3771  02C9                     i1l1715:
  3772  02C9  0870               	movf	___awdiv@divisor,w
  3773  02CA  0471               	iorwf	___awdiv@divisor+1,w
  3774  02CB  1903               	btfsc	3,2
  3775  02CC  2ACE               	goto	u95_21
  3776  02CD  2ACF               	goto	u95_20
  3777  02CE                     u95_21:
  3778  02CE  2B06               	goto	i1l1735
  3779  02CF                     u95_20:
  3780  02CF                     i1l1717:
  3781  02CF  01F4               	clrf	___awdiv@counter
  3782  02D0  0AF4               	incf	___awdiv@counter,f
  3783  02D1  2ADD               	goto	i1l1723
  3784  02D2                     i1l1719:
  3785  02D2  3001               	movlw	1
  3786  02D3                     u96_25:
  3787  02D3  1003               	clrc
  3788  02D4  0DF0               	rlf	___awdiv@divisor,f
  3789  02D5  0DF1               	rlf	___awdiv@divisor+1,f
  3790  02D6  3EFF               	addlw	-1
  3791  02D7  1D03               	skipz
  3792  02D8  2AD3               	goto	u96_25
  3793  02D9                     i1l1721:
  3794  02D9  3001               	movlw	1
  3795  02DA  00FF               	movwf	btemp+1
  3796  02DB  087F               	movf	btemp+1,w
  3797  02DC  07F4               	addwf	___awdiv@counter,f
  3798  02DD                     i1l1723:
  3799  02DD  1FF1               	btfss	___awdiv@divisor+1,7
  3800  02DE  2AE0               	goto	u97_21
  3801  02DF  2AE1               	goto	u97_20
  3802  02E0                     u97_21:
  3803  02E0  2AD2               	goto	i1l1719
  3804  02E1                     u97_20:
  3805  02E1                     i1l1725:
  3806  02E1  3001               	movlw	1
  3807  02E2                     u98_25:
  3808  02E2  1003               	clrc
  3809  02E3  0DF6               	rlf	___awdiv@quotient,f
  3810  02E4  0DF7               	rlf	___awdiv@quotient+1,f
  3811  02E5  3EFF               	addlw	-1
  3812  02E6  1D03               	skipz
  3813  02E7  2AE2               	goto	u98_25
  3814  02E8  0871               	movf	___awdiv@divisor+1,w
  3815  02E9  0273               	subwf	___awdiv@dividend+1,w
  3816  02EA  1D03               	skipz
  3817  02EB  2AEE               	goto	u99_25
  3818  02EC  0870               	movf	___awdiv@divisor,w
  3819  02ED  0272               	subwf	___awdiv@dividend,w
  3820  02EE                     u99_25:
  3821  02EE  1C03               	skipc
  3822  02EF  2AF1               	goto	u99_21
  3823  02F0  2AF2               	goto	u99_20
  3824  02F1                     u99_21:
  3825  02F1  2AF9               	goto	i1l1731
  3826  02F2                     u99_20:
  3827  02F2                     i1l1727:
  3828  02F2  0870               	movf	___awdiv@divisor,w
  3829  02F3  02F2               	subwf	___awdiv@dividend,f
  3830  02F4  0871               	movf	___awdiv@divisor+1,w
  3831  02F5  1C03               	skipc
  3832  02F6  03F3               	decf	___awdiv@dividend+1,f
  3833  02F7  02F3               	subwf	___awdiv@dividend+1,f
  3834  02F8                     i1l1729:
  3835  02F8  1476               	bsf	___awdiv@quotient,0
  3836  02F9                     i1l1731:
  3837  02F9  3001               	movlw	1
  3838  02FA                     u100_25:
  3839  02FA  1003               	clrc
  3840  02FB  0CF1               	rrf	___awdiv@divisor+1,f
  3841  02FC  0CF0               	rrf	___awdiv@divisor,f
  3842  02FD  3EFF               	addlw	-1
  3843  02FE  1D03               	skipz
  3844  02FF  2AFA               	goto	u100_25
  3845  0300                     i1l1733:
  3846  0300  3001               	movlw	1
  3847  0301  02F4               	subwf	___awdiv@counter,f
  3848  0302  1D03               	btfss	3,2
  3849  0303  2B05               	goto	u101_21
  3850  0304  2B06               	goto	u101_20
  3851  0305                     u101_21:
  3852  0305  2AE1               	goto	i1l1725
  3853  0306                     u101_20:
  3854  0306                     i1l1735:
  3855  0306  0875               	movf	___awdiv@sign,w
  3856  0307  1903               	btfsc	3,2
  3857  0308  2B0A               	goto	u102_21
  3858  0309  2B0B               	goto	u102_20
  3859  030A                     u102_21:
  3860  030A  2B10               	goto	i1l1739
  3861  030B                     u102_20:
  3862  030B                     i1l1737:
  3863  030B  09F6               	comf	___awdiv@quotient,f
  3864  030C  09F7               	comf	___awdiv@quotient+1,f
  3865  030D  0AF6               	incf	___awdiv@quotient,f
  3866  030E  1903               	skipnz
  3867  030F  0AF7               	incf	___awdiv@quotient+1,f
  3868  0310                     i1l1739:
  3869  0310  0877               	movf	___awdiv@quotient+1,w
  3870  0311  00F1               	movwf	?___awdiv+1
  3871  0312  0876               	movf	___awdiv@quotient,w
  3872  0313  00F0               	movwf	?___awdiv
  3873  0314                     i1l524:
  3874  0314  0008               	return
  3875  0315                     __end_of___awdiv:
  3876  007E                     btemp	set	126	;btemp
  3877  007E                     wtemp0	set	126
  3878                           
  3879                           	psect	config
  3880                           
  3881                           ;Config register CONFIG @ 0x2007
  3882                           ;	Oscillator Selection bits
  3883                           ;	FOSC = HS, HS oscillator
  3884                           ;	Watchdog Timer Enable bit
  3885                           ;	WDTE = OFF, WDT disabled
  3886                           ;	Power-up Timer Enable bit
  3887                           ;	PWRTE = OFF, PWRT disabled
  3888                           ;	Brown-out Reset Enable bit
  3889                           ;	BOREN = OFF, BOR disabled
  3890                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3891                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3892                           ;	Data EEPROM Memory Code Protection bit
  3893                           ;	CPD = OFF, Data EEPROM code protection off
  3894                           ;	Flash Program Memory Write Enable bits
  3895                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3896                           ;	In-Circuit Debugger Mode bit
  3897                           ;	DEBUG = 0x1, unprogrammed default
  3898                           ;	Flash Program Memory Code Protection bit
  3899                           ;	CP = OFF, Code protection off
  3900  2007                     	org	8199
  3901  2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_e2pext_w
    _e2pext_w->_e2pext_r
    _e2pext_r->_i2c_rb
    _e2pext_r->_i2c_wb

Critical Paths under _main in BANK0

    _main->___lwdiv

Critical Paths under _ISR in BANK0

    _ISR->_e2pext_w

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     314
                                             22 BANK0      4     4      0
                            ___lwdiv
                           _adc_init
                           _i2c_init
                               _init
                   _timer_100ms_init
                    _timer_10ms_init
                      _timer_1s_init
 ---------------------------------------------------------------------------------
 (1) _timer_1s_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_10ms_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_100ms_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             15 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 10    10      0    3027
                                              5 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                        _adc_amostra
                          _display7s
                           _e2pext_r
                           _e2pext_w
 ---------------------------------------------------------------------------------
 (3) _e2pext_w                                            10     7      3    1164
                                              9 COMMON     5     2      3
                                              0 BANK0      5     5      0
                           _e2pext_r
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (4) _e2pext_r                                             5     3      2     567
                                              4 COMMON     5     3      2
                             _i2c_rb
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (4) _i2c_wb                                               4     4      0      90
                                              0 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                              _delay
 ---------------------------------------------------------------------------------
 (5) _i2c_rb                                               4     4      0     114
                                              0 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (5) _delay                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display7s                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _adc_amostra                                         10     8      2      22
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   _adc_init
   _i2c_init
   _init
   _timer_100ms_init
   _timer_10ms_init
   _timer_1s_init

 _ISR (ROOT)
   ___awdiv
   ___awmod
   _adc_amostra
   _display7s
   _e2pext_r
     _i2c_rb
       _delay
     _i2c_start
       _delay
     _i2c_stop
       _delay
     _i2c_wb
       _delay
   _e2pext_w
     _e2pext_r
       _i2c_rb
         _delay
       _i2c_start
         _delay
       _i2c_stop
         _delay
       _i2c_wb
         _delay
     _i2c_start
       _delay
     _i2c_stop
       _delay
     _i2c_wb
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      37       5       68.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jul 17 19:46:54 2020

                        _i 0043                          pc 0002  __size_of_timer_100ms_init 000A  
                       l13 0612                         l80 062B               ___awdiv@sign 0075  
          ??_timer_1s_init 002F                         fsr 0004       __size_of_adc_amostra 0046  
                      l240 05A5                        l243 0609                        l246 05FF  
                      l255 02A6                        l264 01FA                        l249 05F5  
                      l257 01DD                        l282 02AA                        l643 050C  
                      _GIE 005F                        _ISR 002F                        fsr0 0004  
                      _sum 003A                        indf 0000               ___awmod@sign 0075  
                     ?_ISR 0070                       l2001 0275                       l2011 0296  
                     l2003 0278                       l2013 0299                       l2005 027A  
                     l2015 029E                       l2007 0281                       l2017 02A1  
                     l2009 0286                       l2019 02A8                       l1551 060A  
                     l1801 0502                       l1803 0508                       l1671 0597  
                     l1681 05A3                       l1673 0598                       l1667 0624  
                     l1683 05A4                       l1675 0599                       l1691 05FC  
                     l1931 01BD                       l1781 04C7                       l1677 059F  
                     l1669 0591                       l1685 0600                       l1693 05EA  
                     l1941 01D8                       l1933 01C2                       l1791 04DF  
                     l1783 04CB                       l1679 05A2                       l1687 0601  
                     l1695 05F0                       l1951 01EF                       l1943 01DC  
                     l1935 01C7                       l1927 01B3                       l1793 04E3  
                     l1785 04D1                       l1689 05F6                       l1697 05F2  
                     l1961 01FE                       l1953 01F0                       l1945 01E1  
                     l1937 01CC                       l1929 01B8                       l1795 04F4  
                     l1787 04D4                       l1971 020F                       l1963 0203  
                     l1955 01F4                       l1947 01E6                       l1939 01D1  
                     l1797 04FA                       l1789 04DB                       l1981 0212  
                     l1965 0206                       l1973 0210                       l1949 01E9  
                     l1957 01F5                       l1799 04FB                       l1991 023D  
                     l1983 021F                       l1975 0211                       l1967 020C  
                     l1959 01F9                       l1993 023F                       l1985 0223  
                     l1969 020D                       l1995 0256                       l1987 0229  
                     l1997 025A                       l1989 023C                       l1999 025C  
                     u1120 04D1                       u1121 04D0                       u1140 04E3  
                     u1141 04E2                       u1135 04D5                       u1160 04F4  
                     u1161 04F3                       u1155 04E4                       u1180 0508  
                     u1500 0203                       u1181 0507                       u1165 04F0  
                     u1501 0202                       u1510 020C                       u1430 01D8  
                     u1175 04FC                       u1511 020B                       u1431 01D7  
                     u1600 029E                       u1520 0229                       u1440 01DC  
                     u1601 029D                       u1521 0228                       u1441 01DB  
                     u1530 0256                       u1450 01E1                       u1531 0255  
                     u1451 01E0                       u1540 0275                       u1460 01E6  
                     u1541 0274                       u1461 01E5                       u1550 0281  
                     u1470 01EF                       u1551 0280                       u1535 0252  
                     u1471 01EE                       u1560 0286                       u1480 01F9  
                     u1561 0285                       u1545 0271                       u1481 01F8  
                     u1570 028E                       u1490 01FE                       u1571 028A  
                     u1491 01FD                       u1590 0296                       u1591 0295  
                     u1584 0291                       _PEIE 005E                       i1l21 052C  
                     _INTE 005C                       _INTF 0059                       i1l24 0552  
                     i1l18 0529                       i1l60 04B7                       i1l29 0429  
                     i1l61 04C6                       i1l70 0379                       i1l90 057F  
                     i1l58 049A                       i1l66 0341                       i1l83 05DC  
                     i1l91 0590                       i1l77 061B                       i1l94 0436  
                     i1l86 05CA                       i1l95 0459                       i1l96 0465  
                     i1l98 0479                       _TMR0 0001                       _TMR1 000E  
                     _TMR2 0011                       _main 01B3                       _init 0591  
                     btemp 007E                       start 0012                 e2pext_r@ah 0078  
               e2pext_r@al 0077                 e2pext_w@ah 0020                 e2pext_w@al 0021  
               e2pext_w@nt 0022                      ??_ISR 0025                      ?_main 0070  
                    ?_init 0070            __end_of___awdiv 0315            __end_of___awmod 03D3  
          ___awdiv@divisor 0070                      _T1CON 0010                      _T2CON 0012  
          __end_of___lwdiv 050D                      i1l236 01A4                      i1l237 01A8  
                    i1l524 0314                      i1l537 03D2            ___awdiv@counter 0074  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    _TRISA 0085                      u81_24 0560                      _TRISB 0086  
                    u81_25 055E                      _TRISC 0087                      _TRISD 0088  
                    u82_20 057F                      u90_20 0334                      u82_21 057E  
                    u90_21 0333                      u91_20 0373                      u91_21 0372  
                    u83_24 0447                      u83_25 0445                      u91_25 036F  
                    u84_20 0459                      u92_20 0379                      u84_21 0458  
                    u92_21 0378                      u93_20 02B3                      u85_20 0461  
                    u93_21 02B2                      u85_21 0460                      u94_20 02BE  
                    u86_20 048D                      u94_21 02BD                      u86_21 048C  
                    u95_20 02CF                      u87_20 04AA                      u95_21 02CE  
                    u87_21 04A9                      u88_20 0530                      u88_21 052F  
                    u96_25 02D3                      u97_20 02E1                      u97_21 02E0  
                    u89_25 0535                      u98_25 02E2                      u99_20 02F2  
                    u99_21 02F1                      u99_25 02EE                      _delay 0613  
                    _index 003D                      pclath 000A                      status 0003  
                    wtemp0 007E                e2pext_r@ret 0076                e2pext_w@val 007B  
              e2pext_w@tmp 0023            __initialization 0015               __end_of_main 02AE  
             __end_of_init 05A6           __end_of_i2c_init 062C           __end_of_i2c_stop 05CB  
         __end_of_e2pext_r 04C7           __end_of_e2pext_w 037A                     ??_main 0036  
                   ??_init 002F            _timer_10ms_init 05F6                     ?_delay 0070  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
                   _ADRESL 009E           ___awdiv@dividend 0072           __end_of_adc_init 0613  
                   u100_25 02FA                     u101_20 0306                     u101_21 0305  
                   u102_20 030B                     u110_20 03C4                     u102_21 030A  
                   u110_21 03C3                     u111_20 03C9                     u103_20 037F  
                   u111_21 03C8                     u103_21 037E                     i1l1501 044F  
                   i1l1511 046D                     i1l1503 0453                     u104_20 038A  
                   u120_20 0038                     u104_21 0389                     i1l1513 0475  
                   i1l1505 045C                     i1l1521 05BD                     u120_21 0037  
                   i1l1611 03E9                     i1l1603 03E5                     i1l1515 0478  
                   i1l1507 0461                     i1l1451 05CB                     i1l1523 05C2  
                   i1l1531 0488                     i1l1701 02AF                     i1l1509 0468  
                   i1l1453 05CF                     i1l1541 04AA                     i1l1533 048D  
                   i1l1525 047A                     i1l1711 02C3                     i1l1703 02B3  
                   i1l1631 03F3                     i1l1623 03EF                     i1l1615 03EB  
                   i1l1607 03E7                     i1l1455 05D4                     i1l1519 05B9  
                   i1l1471 0572                     i1l1543 04B1                     i1l1535 0494  
                   i1l1527 047F                     u105_20 0395                     u121_20 0048  
                   i1l1721 02D9                     i1l1713 02C7                     i1l1705 02B8  
                   u105_21 0394                     i1l1553 050E                     i1l1641 03F7  
                   i1l1449 0613                     i1l1481 058D                     i1l1473 0575  
                   i1l1465 0558                     i1l1457 0554                     i1l1545 04C0  
                   i1l1537 04A0                     i1l1529 0483                     u121_21 0047  
                   i1l1731 02F9                     i1l1723 02DD                     i1l1715 02C9  
                   i1l1707 02BA                     i1l1555 050F                     i1l1563 051E  
                   i1l1635 03F5                     i1l1627 03F1                     i1l1619 03ED  
                   i1l1571 03D5                     i1l1483 042B                     i1l1475 0579  
                   i1l1467 056C                     i1l1459 0557                     i1l1547 04C5  
                   i1l1539 04A5                     i1l1651 0328                     i1l1643 0315  
                   i1l1811 0038                     i1l1733 0300                     i1l1725 02E1  
                   i1l1717 02CF                     i1l1709 02BE                     i1l1565 0530  
                   i1l1557 0514                     i1l1485 042C                     i1l1477 0580  
                   i1l1469 056D                     i1l1661 0356                     i1l1653 032D  
                   i1l1645 031E                     i1l1901 0161                     i1l1813 003A  
                   i1l1821 0059                     i1l1727 02F2                     i1l1719 02D2  
                   i1l1735 0306                     i1l1751 0386                     i1l1743 037A  
                   i1l1559 0519                     i1l1591 03DF                     i1l1583 03DB  
                   i1l1575 03D7                     i1l1495 0437                     i1l1487 042F  
                   i1l1479 0585                     i1l1663 035C                     i1l1655 0334  
                   i1l1647 0323                     i1l1911 0174                     i1l1903 0165  
                   i1l1831 0070                     i1l1823 005F                     i1l1815 0048  
                   i1l1807 002F                     u130_20 00FB                     u122_20 005F  
                   i1l1737 030B                     i1l1729 02F8                     i1l1761 039F  
                   i1l1753 038A                     i1l1745 037B                     i1l1569 03D4  
                   i1l1497 043C                     i1l1489 0432                     i1l1665 0373  
                   i1l1657 033B                     i1l1649 0327                     i1l1921 018A  
                   i1l1913 017A                     u130_21 00FA                     i1l1905 0166  
                   i1l1841 00AF                     i1l1833 0087                     i1l1825 0064  
                   u122_21 005E                     i1l1817 0057                     i1l1809 0033  
                   i1l1739 0310                     i1l1771 03BE                     i1l1763 03A3  
                   i1l1755 038F                     i1l1747 037F                     i1l1595 03E1  
                   i1l1587 03DD                     i1l1579 03D9                     i1l1499 044E  
                   i1l1659 0351                     i1l1923 0197                     i1l1915 017E  
                   i1l1907 016A                     i1l1851 00F1                     i1l1843 00C6  
                   i1l1835 009D                     i1l1827 0069                     i1l1819 0058  
                   i1l1765 03A7                     u106_25 0399                     i1l1757 0395  
                   i1l1773 03C4                     i1l1749 0384                     i1l1917 0184  
                   i1l1909 016F                     i1l1861 0104                     i1l1845 00DC  
                   i1l1829 006B                     i1l1837 00A8                     i1l1853 00F2  
                   i1l1775 03C9                     i1l1767 03B1                     i1l1759 0398  
                   i1l1599 03E3                     i1l1919 0186                     i1l1871 011A  
                   i1l1863 010A                     i1l1855 00F6                     i1l1839 00AA  
                   i1l1847 00E6                     u107_20 03A7                     u131_20 0100  
                   u123_20 0064                     i1l1777 03CE                     i1l1769 03B7  
                   u107_21 03A6                     i1l1881 012F                     i1l1865 010F  
                   i1l1873 011B                     u131_21 00FF                     i1l1857 00FB  
                   i1l1849 00F0                     u123_21 0063                     i1l1699 02AE  
                   i1l1891 0147                     i1l1883 0134                     i1l1875 0120  
                   i1l1867 0114                     i1l1859 0100                     i1l1893 0149  
                   i1l1885 0136                     i1l1877 0124                     i1l1869 0116  
                   i1l1895 014F                     i1l1887 013A                     i1l1879 012A  
                   u108_20 03B1                     u140_20 0174                     u132_20 010A  
                   u124_20 0069                     u108_21 03B0                     u140_21 0173  
                   i1l1897 0150                     i1l1889 013B                     u132_21 0109  
                   u124_21 0068                     i1l1899 0159                     u108_25 03AD  
                   u141_20 017A                     u133_20 010F                     u125_20 0070  
                   u141_21 0179                     u133_21 010E                     u125_21 006F  
                   u109_25 03B8                     u142_20 0184                     u134_20 0120  
                   u126_20 00AF                     u142_21 0183                     u134_21 011F  
                   u126_21 00AE                     u135_20 012A                     u127_20 00EC  
                   u119_20 0033                     u135_21 0129                     u127_21 00EA  
                   u119_21 0032                     u136_20 012F                     u128_20 00ED  
                   u136_21 012E                     u137_20 014F                     u129_20 00F6  
                   u137_21 014E                     u129_21 00F5                     u138_20 016A  
                   u138_21 0169                     u139_20 016F                     u139_21 016E  
                   _TMR0IE 005D                     _TMR0IF 005A                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR2IE 0461                     _TMR2IF 0061  
                   _TMR1ON 0080                     _TMR2ON 0092         __size_of_i2c_start 0012  
                   _i2c_rb 042A                     _i2c_wb 0553                  ??___awdiv 0074  
                ??___awmod 0074           _timer_100ms_init 0600                  ??___lwdiv 0033  
                   _mask7S 0056           ___awdiv@quotient 0076            ___awmod@divisor 0070  
          ___awmod@counter 0074                     saved_w 007E               e2pext_r@addr 0074  
             e2pext_w@addr 0079    __end_of__initialization 002B             __pcstackCOMMON 0070  
             __pidataBANK0 05DD              __end_of_delay 061C    __end_of_timer_10ms_init 0600  
        __end_of_i2c_start 05DD         __size_of_display7s 0057                    ??_delay 0070  
               __pbssBANK0 003A                  ?_i2c_init 0070                  ?_i2c_stop 0070  
                ?_e2pext_r 0074                  ?_e2pext_w 0079                    ?_i2c_rb 0070  
                  ?_i2c_wb 0070                 __pmaintext 01B3              ??_adc_amostra 0072  
               __pintentry 0004                  ?_adc_init 0070      __end_of_timer_1s_init 05F6  
                  _ISR$275 002B                    _ISR$276 002D                    i2c_rb@i 0073  
                  i2c_wb@i 0073                 ??_i2c_init 002F                 ??_i2c_stop 0070  
               ??_e2pext_r 0076                 ??_e2pext_w 007C                 _firstDigit 003F  
          __size_of_i2c_rb 0050            __size_of_i2c_wb 003E          __end_of_display7s 042A  
                  ___awdiv 02AE                    ___awmod 037A                    ___lwdiv 04C7  
                  _delay7S 0045                 ??_adc_init 002F                    __ptext1 05EA  
                  __ptext2 05F6                    __ptext3 0600                    __ptext4 0591  
                  __ptext5 0624                    __ptext6 060A                    __ptext7 04C7  
                  __ptext8 002F                    __ptext9 0315           ?_timer_10ms_init 0070  
                  _maskLED 0055               __size_of_ISR 0184                    _segFlag 0042  
      __end_of_adc_amostra 0553           ___awmod@dividend 0072                    _tempAvg 0041  
                  _tempSet 0054                    clrloop0 061D   __end_of_timer_100ms_init 060A  
     end_of_initialization 002B                 _notPressed 003C                  _PORTBbits 0006  
                _PORTCbits 0007                  _TRISCbits 0087                  i2c_rb@ack 0071  
                i2c_rb@ret 0072                  i2c_wb@val 0072                 display7s@v 0070  
           __end_of_i2c_rb 047A             __end_of_i2c_wb 0591                _adc_amostra 050D  
      start_initialization 0015                __end_of_ISR 01B3                  _i2c_start 05CB  
        __size_of_i2c_init 0008          __size_of_i2c_stop 0012          __size_of_e2pext_r 004D  
        __size_of_e2pext_w 0065                   ??_i2c_rb 0070                   ??_i2c_wb 0070  
               init_fetch0 05A6                __pdataBANK0 004A          __size_of_adc_init 0009  
                ___latbits 0002              __pcstackBANK0 0020                 ?_i2c_start 0070  
         ___lwdiv@dividend 0031                   ?___awdiv 0070                   ?___awmod 0070  
                 ?___lwdiv 002F                  _display7s 03D3           ___lwdiv@quotient 0033  
           __size_of_delay 0009          ?_timer_100ms_init 0070          interrupt_function 0004  
       ??_timer_100ms_init 002F                  clear_ram0 061C     __size_of_timer_1s_init 000C  
                _powerMode 0048                 ?_display7s 0070                 _ADCON0bits 001F  
              ??_i2c_start 0070   __size_of_timer_10ms_init 000A                   _i2c_init 0624  
                 _i2c_stop 05B9                   _e2pext_r 047A                   _e2pext_w 0315  
             ?_adc_amostra 0070           __size_of___awdiv 0067           __size_of___awmod 0059  
         __size_of___lwdiv 0046                   _adc_init 060A              _timer_1s_init 05EA  
                 _delayLED 0044            ___lwdiv@divisor 002F                   _heatMode 0047  
          ___lwdiv@counter 0035                   __ptext10 047A                   __ptext11 0553  
                 __ptext12 05B9                   __ptext13 05CB                   __ptext14 042A  
                 __ptext15 0613                   __ptext16 03D3                   __ptext17 050D  
                 __ptext18 037A                   __ptext19 02AE                   _coolMode 0046  
            __size_of_main 00FB              __size_of_init 0015                   _tempHist 004A  
                 _tempCurr 0040                   _tempMode 0049                ??_display7s 0070  
           ?_timer_1s_init 0070                _secondDigit 003E                   init_ram0 05AA  
                 intlevel1 0000          ??_timer_10ms_init 002F                 _OPTION_REG 0081  
         adc_amostra@canal 0079  
